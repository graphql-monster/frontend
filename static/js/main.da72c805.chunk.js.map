{"version":3,"sources":["components/Loading/Loading.tsx","components/Unauthorized/Unauthorized.tsx","components/EditorEx/Control.tsx","components/EditorEx/Form.tsx","components/EditorEx/Tabs.tsx","components/EditorEx/Edit.tsx","pages/Projects/defaultSchema.ts","components/Editor/BaseEditor.tsx","app/reducers/userSlice.ts","components/Editor/AceControl.tsx","components/Editor/Control.tsx","pages/Projects/GraphQLError.tsx","pages/Projects/EditForm.tsx","components/List1/FilterItem.tsx","components/List1/RowItem.tsx","components/List1/Row1.tsx","components/DeleteModal/DeleteModal.tsx","components/List1/Table.tsx","components/List1/FilteredList.tsx","pages/Projects/3.png","pages/Projects/Card.tsx","pages/Projects/ProjectCards.tsx","pages/Projects/List.tsx","pages/Projects/Edit.tsx","pages/Exports1/List.tsx","components/List1/ConnectBase.tsx","pages/Users1/List1.tsx","components/Header1/Logo.tsx","components/Header1/AdminHeader.tsx","components/NavDropdownItem/NavDropdownItem.tsx","components/NavLink/NavLink.tsx","components/Header1/PublicHeader.tsx","components/Header1/UserHeader.tsx","components/Header1/Header1.tsx","app/refreshToken.ts","app/apolloClient.ts","pages/UserRoles/List.tsx","pages/UserRoles/Edit.tsx","pages/Projects/GQLPlayground.tsx","pages/home/home.tsx","app/utils.ts","pages/login/PasswordComponent.tsx","app/hooks.ts","pages/login/Register.tsx","pages/login/Login.tsx","pages/pricing/pricing.tsx","pages/pricing/subsribe.tsx","pages/Documentation1/SchemaDescription.tsx","pages/Documentation1/markdowns/SchemaDescription.ts","pages/pricing/subsribe-list.tsx","pages/login/VerifyUser.tsx","pages/login/UserInfo.tsx","pages/login/ForgottenPassword.tsx","pages/login/ForgottenPasswordReset.tsx","pages/login/PassportCallback.tsx","gen/Export/Edit.tsx","components/Editor/HiddenItem.tsx","pages/Exports1/PdfDownloadState.tsx","pages/Exports1/Edit.tsx","app/store.ts","pages/Files/List.tsx","pages/Documentation1/ObtainToken.tsx","pages/Documentation1/markdowns/ObtainToken.ts","App.tsx","serviceWorker.ts","index.tsx"],"names":["Loading","what","Unauthorized","where","Alert","variant","BaseControl","model","field","onChange","name","edit","label","control","placeholder","useState","value","setValue","useEffect","onUpdate","Form","Group","controlId","Label","env","target","Control","type","FormControl","Feedback","BaseForm","fields","doUpdate","map","EditTabs","tabs","Object","keys","key","setKey","Tabs","id","activeKey","onSelect","k","tab","idx","Tab","eventKey","title","style","marginTop","join","getDataFromRaw","rawData","BaseEdit","externId","query","onUpdated","updateCache","renameError","onCompleted","localId","setLocalId","unauthorized","setUnauthorized","errors","setErrors","haveTabs","some","isNaN","models","setModel","handleError","incommingError","incomingErrors","message","split","error","skipLoading","useQuery","QUERY","variables","skip","loadedDataRaw","console","log","loadedData","updateDataFromLoaded","onError","e","loading","useMutation","CREATE_MUTATION","errorPolicy","raw","data","update","createProjectMutation","UPDATE_MUTATION","updateProjectMutation","useCallback","userId","localStorage","getItem","margin","Button","onClick","length","Boolean","BaseEditor","form","children","storedData","setStoredData","onSubmit","initialState","user","token","email","roles","role","verified","userFromStorage","userSlice","createSlice","reducers","login","state","action","userToken","payload","setItem","refreshToken","toString","r","logout","removeItem","selectUser","actions","AceControl","required","formState","register","getValues","defaultHight","touchedFields","dirtyFields","height","setHeight","Fragment","width","resizeHandles","onResize","_","size","minConstraints","editorProps","$blockScrolling","isInvalid","GraphQLError","graphQLError","gqe","ProjectEditForm","graphQlError","projectId","history","useSelector","useHistory","selectedTab","setSelectedTab","reactForm","useForm","handleSubmit","processSubmit","watch","className","tabKey","replace","disabled","basicOptionsName","contains","not_contains","starts_with","not_starts_with","ends_with","not_ends_with","isEmpty","FilterItem","fieldSelected","setFieldSelected","optionSelected","setOptionSelected","filterText","setFilterText","filter","setFilter","doFilter","f","processFilter","option","text","gc","o","o2","go","InputGroup","DropdownButton","as","Prepend","Dropdown","Item","getOwnPropertyNames","ListRowItem","item","fieldDesc","names","element","getElementFromField","component","substr","push","reduce","p","ListRow","onDelete","showDelete","onEdit","getEditLink","doEdit","editLink","useMemo","toLowerCase","to","DeleteModal","show","onHide","category","deleteObject","deleting","Modal","Header","closeButton","Title","Body","Footer","Table","adminMode","queries","setDeleteObject","showDeleteDialog","setShowDeleteDialog","deletingOnDeleteDialog","setDeletingOnDeleteDialog","setLoading","setData","setError","ADMIN_LIST_QUERY","USER_LIST_QUERY","d","dataFields","userRefetch","refetch","userLoading","DELETE_MUTATION","deleteProject","onHideDidaloDelete","deleteProjectMutation","obj","responsive","projectItem","createFilter","AND","addAnd","node","filterDestructNode","n","filterDestruct","fo","params","FilteredList","staticFilter","onCreate","createDefaultFilter","defaultFilter","user_every","filterDestructed","onFilterChange","Card","project","onRemove","projectConnectLink","src","logo","alt","domain","navigator","clipboard","writeText","ProjectCards","projects","gql","GraphiqlLink","ProjectAdminList","data-scroll-speed","ProjectList","projectForRemove","setProjectForRemove","doRemove","a","removeMutation","cache","removeProject","cacheRead","readQuery","writeQuery","allProject","ProjectEdit","createProject","UserList","useParams","project_every","ConnectBase","elementTitle","setTitle","iraw","final","checked","indexOf","ADD","addMutation","REMOVE","updated","updateTitle","id1","id2","onChecked","Check","USER_ROLE_QUERY","ADD_MUTATION","REMOVE_MUTATION","ConnectRole","Logo","href","Badge","UserHeader","onLogout","NavDropdownItem","goTo","NavDropdown","NavLink","Nav","Link","PublicHeader","Navbar","bg","expand","Brand","Toggle","aria-controls","Collapse","Divider","dispatch","useDispatch","find","AdminHeader","axios","post","process","retryLink","RetryLink","attempts","count","operation","delay","Math","random","isRefreshing","pendingRequests","unautheniticatedAction","forward","forward$","fromPromise","Promise","resolve","then","refreshToken_v1","callback","oldHeaders","getContext","headers","setContext","authorization","catch","finally","flatMap","authLink","httpLink","createHttpLink","uri","erroLink","graphQLErrors","networkError","tokenExpired","locations","path","apolloClient","ApolloClient","link","ApolloLink","from","InMemoryCache","defaultOptions","watchQuery","mutate","UserRoleList","UserRoleEdit","GQLPlayground","userState","get","endpoint","store","getState","settings","getSettings","Authorization","XUser","XProject","setSettingsString","JSON","stringify","workspaceName","platformToken","Home","data-wow-delay","strings","typeSpeed","backSpeed","startDelay","loop","isEmailValid","RegExp","test","passwordStrong","password","valid","strong","capital","lower","number","percentage","PasswordComponent","onPasswordChange","strongPassword","Text","ProgressBar","now","useAppDispatch","REGISTER_MUTATION","Register","setEmail","pass","setPass","copy","setCopy","registerMutation","invalidEmail","setInvalidEmail","emailProbablyTaken","setEmailProbablyTaken","setStrong","invalidCopy","setInvalidCopy","onRegister","register_v1","data-bgimage","method","event","c","LOGIN_QL","Login","invalidPass","setInvalidPass","loginMutation","onLogin","login_v1","PricingPage","SUBSCRIBE_MUTATION_QL","SubscribePage","setVerify","subsribed","setSubsribed","subsribe","onSubsribe","validEmail","rows","sitekey","verifyCallback","v","setTimeout","DocumentationSchemaDescription","plugins","gfm","allowDangerousHtml","SubscibesListPage","VERIFY_EMAIL_MUTATION","VerifyUser","match","verifyToken","setVerified","verify","verifying","verifiedError","doVerifyUser","verifyEmail_v1","previouslyVerified","onVerifyUser","CHANGE_PASSWORD_MUTATION","VERIFY_EMAIL_RESEND_MUTATION","UserInfo","oldPassword","setOldPassword","newPassword","setNewPassword","newPasswordCopy","setNewPasswordCopy","showPasswordChanged","setShowPasswordChanged","invalidPasswordCopy","setInvalidNewPasswordCopy","showVerifyEmailSended","setShowVerifyEmailSended","invalidOldPassword","setInvalidOldPassword","userEmail","userVerified","changePassword","verifyEmailResend","onVerifyEmailResend","onChangePassword","changePassword_v1","FORGOTTEN_PASSWORD_REQUEST_MUTATION","ForgottenPassword","emailSent","setEmailSent","doForgottenPassword","onRequestSend","FORGOTTEN_PASSWORD_CHECK_MUTATION","FORGOTTEN_PASSWORD_RESET_MUTATION","ForgotenPasswordReset","setPassword","doForgottenPasswordCheck","loadingForgottenPasswordCheck","dataForgottenPasswordCheck","doForgottenPasswordReset","doCheck","onReset","reset","check","status","isPasswordValid","tokenFromFacebookCode","code","PassportCallback","location","useLocation","codeRaw","showError","errorMessage","response","parse","request","ONE_QUERY","HiddenItem","isRelation","endsWith","storedDataName","storedId","PdfDownloadState","ok","setStatus","url","filename","Headers","append","fetch","blob","newBlob","Blob","window","msSaveOrOpenBlob","objUrl","URL","createObjectURL","document","createElement","download","click","revokeObjectURL","b","fr","FileReader","onload","data1","this","result","readAsText","ExportForm","pdfDownloadState","setPdfDownloadState","testVariables","testToken","testLink","jsonValue","JSON5","escapedValue","encodeURI","onTestDownload","downloadPDF","ExportEdit","createMutation","updateMutation","oneQuery","configureStore","reducer","userReducer","clientGQL","clientUrl","ListFiles","fileList","file","publicKey","ProjectFilesList","setFileList","loadFilesFromClient","xuser","xproject","localFiles","allFile","currentTarget","files","FormData","reject","DocumentationOptainToken","App","client","exact","ForgottenPasswordReset","ExportList","hostname","ReactDOM","render","StrictMode","getElementById","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.da72c805.chunk.js","sourcesContent":["\nimport React from \"react\";\n\nexport const Loading = ({what = ''}) => {\n    return (<div>{`Loading ${what}... `}</div>)\n}\n\nexport default Loading","import React from \"react\";\nimport { Alert } from 'react-bootstrap'\n\nexport const Unauthorized = ({where = ''}) => {\n    return (<Alert variant={'danger'}>{`Unauthorized ${where} access`}</Alert>)\n}\n\nexport default Unauthorized","import React, { useState, useEffect } from \"react\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\n\nexport type TControl = {\n  placeholder? : string\n  onChange: (env: any) => void\n  value: string\n}\n\nexport type TControlField = {\n  name: string\n  label?: string\n  placeholder?: string\n  control?: React.FC<TControl>\n  valid?: string\n}\n\nexport type TField = string | TControlField\n\nexport interface IBaseControl {\n  model: any;\n  onChange: (name: string, value:any) => void;\n  edit?: boolean\n  field: TField\n}\n\nexport const BaseControl: React.FC<IBaseControl> = ({ model, field, onChange, edit = false }) => {\n  const name = (field as TControlField).name ? (field as TControlField).name : field as string\n  const label = (field as TControlField).label ? (field as TControlField).label : name\n  const control = (field as TControlField).control ? (field as TControlField).control : null\n  const placeholder = (field as TControlField).placeholder ? (field as TControlField).placeholder : ''\n\n  const [value, setValue] = useState(model[name]);\n\n  useEffect(()=>{\n    setValue(model[name])\n  }, [field, model])\n\n  const onUpdate = (value:string) => {\n    const obj = {...model} as any\n    obj[name] = value\n\n    setValue(value)\n    onChange(name, value)\n  }\n\n  return (\n    <Form.Group controlId=\"formBasicEmail\">\n          <Form.Label>{label}</Form.Label>\n          {control ? \n            control({onChange:(env: any) => onUpdate(env.target.value), value, placeholder}) :\n            <Form.Control\n              type=\"text\"\n              placeholder={placeholder}\n              onChange={(env: any) => onUpdate(env.target.value)}\n              value={value}\n            />\n          }\n          <FormControl.Feedback type=\"valid\">\n            Yeah you did it!\n          </FormControl.Feedback>\n        </Form.Group>\n  );\n};\n\nexport default BaseControl","import React, { useState, useEffect } from \"react\";\nimport { Form, FormControl, Button } from \"react-bootstrap\";\n\nimport BaseControl, { TField } from './Control'\n\nexport type TBaseForm = {\n  model: any;\n  doUpdate: (model:any) => void;\n  edit?: boolean\n  fields: TField[]\n}\n\nexport const BaseForm: React.FC<TBaseForm> = ({ model, fields, doUpdate, edit = false }) => {\n  \n  const onUpdate = () => {\n      doUpdate(model)\n  }\n\n  const onChange = (field:string, value:any) => {\n    model[field] = value\n  }\n\n  return (\n    <div>\n      <Form>\n        {fields.map((field:any)=>(<BaseControl model={model} field={field} onChange={onChange}/>))}\n      </Form>\n    </div>\n  );\n};\n","import React, { useState } from 'react'\nimport { Tab, Tabs } from 'react-bootstrap'\nimport { TTabFields } from './Edit'\nimport { BaseForm, TBaseForm } from './Form'\n\ntype TEditTabs = Pick<TBaseForm, 'model' | 'doUpdate' | 'edit'> & {\n    fields:TTabFields\n}\n\nexport const EditTabs:React.FC<TEditTabs> = ({model, doUpdate, fields, edit}) => {\n    const tabs = Object.keys(fields)\n    const [key, setKey] = useState(tabs[0]);\n    \n    return (\n        <div>\n        <Tabs\n            id=\"controlled-tab-example\"\n            activeKey={key}\n            onSelect={(k) => setKey(k || '')}\n            >\n            {tabs.map((tab,idx)=>(<Tab eventKey={tab} title={tab}  style={{marginTop:'15px'}}>\n                <BaseForm key={`tab-${tabs.join()}-${idx}`} model={model} doUpdate={doUpdate} edit={edit} fields={fields[tab]} />\n            </Tab>))}\n            \n            </Tabs>\n        </div>\n    )\n}\n\nexport default EditTabs","import React, { useState, useEffect, useCallback } from \"react\";\n\nimport { BaseForm, TBaseForm } from \"./Form\";\nimport gql from \"graphql-tag\";\nimport { useMutation, useQuery } from \"@apollo/client\";\nimport { DEFAULT_SCHEMA } from \"../../pages/Projects/defaultSchema\";\nimport * as _ from 'lodash'\nimport { Alert, Button } from 'react-bootstrap'\nimport Unauthorized from '../Unauthorized/Unauthorized'\nimport Loading from '../Loading/Loading'\nimport { TField, TControlField } from \"./Control\";\nimport EditTabs from \"./Tabs\";\n\nexport const getDataFromRaw = (rawData: any) => {\n  const rawName = Object.keys(rawData)[0]\n  return rawData[rawName]\n}\n\nexport type TBaseEditUpdateCacheFn = (cache: any, data: any) => void\nexport type TBaseEdiRenameErrorFn = (error: string) => string\nexport type TBaseEdiOnCompletedFn = (data: any) => void\n\nexport type TTabFields = {[key:string]: TBaseForm['fields']}\n\nexport type TBaseEdit = {\n  id: string\n  name: string\n  query: any\n  fields: TBaseForm['fields'] | TTabFields\n  onUpdated? : (data:any) => void\n  updateCache?: TBaseEditUpdateCacheFn\n  renameError?: TBaseEdiRenameErrorFn\n  onCompleted?: TBaseEdiOnCompletedFn\n}\n\nexport const BaseEdit:React.FC<TBaseEdit> = ({id: externId, query, name, fields, onUpdated, updateCache, renameError, onCompleted}) => {\n  const [localId, setLocalId] = useState(externId);\n  const [unauthorized, setUnauthorized] = useState(false);\n  const [errors, setErrors] = useState<string[]|null>([])\n\n  // if the fields is not ust simle array\n  // we consider is it a object defined tabs \n  const haveTabs = Object.keys(fields).some((k)=>isNaN(+k))\n\n  const [model, setModel] = useState({\n    name: \"Project A\",\n    models: DEFAULT_SCHEMA\n  });\n\n  const handleError = (incommingError:{message: string}) => {\n    let incomingErrors = incommingError.message.split('\\n')\n    if(renameError) {\n      incomingErrors = incomingErrors.map(error=>renameError(error))\n    }\n    setErrors(incomingErrors)\n  }\n\n  const updateDataFromLoaded = (loadedDataRaw: any) => {\n    if(!loadedDataRaw){\n      return\n    }\n    \n    const loadedData = getDataFromRaw(loadedDataRaw)\n\n    if(loadedData){\n      // const np = fields.reduce((o:any, field: TField)=> {\n      //   const fieldName = (field as TControlField).name ? (field as TControlField).name : field as string\n      //   o[fieldName] = loadedData[fieldName]\n      //   return o\n      // }, {})\n\n      setModel({...loadedData})\n    } else {\n      setUnauthorized(true)\n    }\n\n    if(onUpdated) onUpdated(loadedData)\n  }\n\n  const skipLoading = !externId\n  const { loading, error } = useQuery(query.QUERY, {\n    variables: {id: externId},\n    skip: skipLoading,\n    onCompleted: (loadedDataRaw: any) =>{\n      console.log('loadedDataRaw', loadedDataRaw, skipLoading)\n      updateDataFromLoaded(loadedDataRaw)\n      \n    }, onError: (e) => {\n      console.log('onError >>> ', e.message)\n      if(e.message == 'GraphQL error: Unauhorized'){\n        setUnauthorized(true)\n      }\n      setModel({name:'', models: ''})\n      \n    }\n  });\n\n  const [\n    createProjectMutation,\n    { loading: createLoading, data: createData, error: createError }\n  ] = useMutation(query.CREATE_MUTATION, {\n    errorPolicy: \"none\",\n    onCompleted: (raw: any) => {\n      const data = getDataFromRaw(raw)\n      setLocalId(data.id);\n\n      setErrors(null)\n\n      if(onCompleted) onCompleted(raw)\n      if(onUpdated) onUpdated(raw)\n      // updateDataFromLoaded(raw)\n    },\n    update: updateCache,\n    onError: handleError\n  });\n\n  const [updateProjectMutation, { loading:updateLoading, data: updateData, error:updateError }] = useMutation(\n    query.UPDATE_MUTATION,\n    {\n      errorPolicy: \"none\",\n      onCompleted: (data: any) => { \n        \n        const raw =  getDataFromRaw(data)\n        console.log(\"UPDATED\", data, raw);\n        setLocalId(raw.id);\n\n        setErrors(null)\n\n        if(onCompleted) onCompleted(raw)\n        if(onUpdated) onUpdated(raw)\n        // updateDataFromLoaded(raw)\n      },\n      update: updateCache,\n      onError: handleError\n    }\n  );\n\n  const onUpdate = useCallback(() => {\n    console.log('onUpdate >>> ', localId, model)\n    if(localId){\n        updateProjectMutation({\n            variables: {\n              id:localId,\n              ...model\n            }\n          });\n    } else {\n        createProjectMutation({\n            variables: {\n              userId: localStorage.getItem(\"user.id\"),\n              ...model\n            }\n          });\n    }\n    \n  }, [localId, model]);\n\n  if(unauthorized) {\n    return (<Unauthorized where={`${name} edit`} />)\n  }\n\n  if(loading) {\n    return (<Loading what={name}/>)\n  }\n\n  return (\n    <div style={{margin:'15px'}}>\n      {externId ? <h3>{name} Edit ({externId}) <Button onClick={onUpdate}>{externId ? 'Update' : 'Create'}</Button></h3> : <h3>{name} create <Button onClick={onUpdate}>{externId ? 'Update' : 'Create'}</Button></h3>}\n      {error && <Alert variant={'danger'}>`${error.message}`</Alert>}\n      {errors && errors.length > 0 && errors.map((e)=>(<Alert variant={'danger'}>{e}</Alert>))}\n      {haveTabs ? <EditTabs fields={fields as TTabFields} model={model} doUpdate={onUpdate} edit={Boolean(localId)} /> : <BaseForm model={model} doUpdate={onUpdate} edit={Boolean(localId)} fields={fields as TField[]} />}\n    </div>\n  );\n};\n\nexport default BaseEdit\n\n","export const DEFAULT_SCHEMA = `\n\ntype Todo @model {\n    id: ID! @isUnique\n    name: String!\n}\n\n`","import { useMutation, useQuery } from '@apollo/client'\nimport React, { useCallback, useState } from 'react'\nimport Loading from '../Loading/Loading'\nimport Unauthorized from '../Unauthorized/Unauthorized'\nimport { getDataFromRaw } from '../EditorEx/Edit'\n\nexport const BaseEditor = ({ name, form, externId, renameError, onUpdated, updateCache, query, children }: any) => {\n  const [localId, setLocalId] = useState(externId)\n  const [unauthorized, setUnauthorized] = useState(false)\n  const [errors, setErrors] = useState<string[] | null>([])\n\n  const [storedData, setStoredData] = useState({})\n\n  const handleError = (incommingError: { message: string }) => {\n    let incomingErrors = incommingError.message.split('\\n')\n    if (renameError) {\n      incomingErrors = incomingErrors.map((error) => renameError(error))\n    }\n    setErrors(incomingErrors)\n  }\n\n  const updateDataFromLoaded = (loadedDataRaw: any) => {\n    if (!loadedDataRaw) {\n      return\n    }\n\n    const loadedData = getDataFromRaw(loadedDataRaw)\n\n    if (loadedData) {\n      setStoredData({ ...loadedData })\n    } else {\n      setUnauthorized(true)\n    }\n  }\n\n  const onCompleted = (raw: any) => {\n    const data = getDataFromRaw(raw)\n    setLocalId(data.id)\n    setErrors(null)\n    if (onUpdated) onUpdated(raw)\n  }\n\n  const skipLoading = !externId\n  const { loading, error } = useQuery(query.QUERY, {\n    variables: { id: externId },\n    skip: skipLoading,\n    onCompleted: (loadedDataRaw: any) => {\n      updateDataFromLoaded(loadedDataRaw)\n    },\n    onError: (e) => {\n      if (e.message == 'GraphQL error: Unauhorized') {\n        setUnauthorized(true)\n      }\n    },\n  })\n\n  const [createProjectMutation] = useMutation(query.CREATE_MUTATION, {\n    errorPolicy: 'none',\n    onCompleted: onCompleted,\n    update: updateCache,\n    onError: handleError,\n  })\n\n  const [updateProjectMutation] = useMutation(query.UPDATE_MUTATION, {\n    errorPolicy: 'none',\n    onCompleted: onCompleted,\n    update: updateCache,\n    onError: handleError,\n  })\n\n  // const onSubmit = (data:any) => {\n  //   console.log(data)\n  // }\n\n  const onSubmit = useCallback(\n    (data) => {\n      if (localId) {\n        setErrors(null)\n        updateProjectMutation({\n          variables: {\n            id: localId,\n            ...data,\n          },\n        })\n      } else {\n        createProjectMutation({\n          variables: {\n            userId: localStorage.getItem('user.id'),\n            ...data,\n          },\n        })\n      }\n    },\n    [localId, storedData],\n  )\n\n  if (unauthorized) {\n    return <Unauthorized where={`${name} edit`} />\n  }\n\n  if (loading) {\n    return <Loading what={name} />\n  }\n\n  return <div>{children(storedData, onSubmit, errors)}</div>\n}\n\nexport default BaseEditor\n","import { createSlice, PayloadAction } from '@reduxjs/toolkit'\nimport { RootState } from '../store'\n\nexport interface UserToken {\n  token: string\n  refreshToken: string\n  user: User\n}\n\nexport interface User {\n  id: string\n  email: string\n  verified: boolean\n  roles: UserRole[]\n  selectedOrgId?: string\n  organizations?: any[]\n}\n\nexport interface UserRole {\n  name: string\n}\n\nexport interface UserState {\n  user?: UserWithToken\n}\n\nexport type UserWithToken = User & {\n  token: string\n}\n\nconst userToStorage = (userToken: UserToken) => {\n  localStorage.setItem('user.token', userToken.token)\n  localStorage.setItem('user.refreshToken', userToken.refreshToken)\n  localStorage.setItem('user.id', userToken.user.id)\n  localStorage.setItem('user.email', userToken.user.email)\n  localStorage.setItem('user.verified', Boolean(userToken.user.verified).toString())\n  localStorage.setItem('user.roles', userToken.user.roles.map((r) => r.name).toString())\n}\n\nconst removeUserFromStorage = () => {\n  localStorage.removeItem('user.refreshToken')\n  localStorage.removeItem('user.token')\n  localStorage.removeItem('user.id')\n  // localStorage.removeItem('user.email')\n  localStorage.removeItem('user.verified')\n  localStorage.removeItem('user.roles')\n}\n\nconst userFromStorage = () => {\n  const token = localStorage.getItem('user.token')\n  if (!token) {\n    return\n  }\n\n  return {\n    token,\n    email: localStorage.getItem('user.email'),\n    id: localStorage.getItem('user.id'),\n    roles: localStorage\n      .getItem('user.roles')\n      ?.split(',')\n      .map((role) => ({ name: role })),\n    verified: Boolean(localStorage.getItem('user.verified')),\n  } as UserWithToken\n}\n\nconst initialSelected = localStorage.getItem('organization.selected')\n\nconst initialState: UserState = {\n  user: userFromStorage(),\n}\n\nexport const userSlice = createSlice({\n  name: 'user',\n  initialState,\n  reducers: {\n    login(state, action: PayloadAction<UserToken>) {\n      userToStorage(action.payload)\n      state.user = {\n        id: action.payload.user.id,\n        token: action.payload.token,\n        email: action.payload.user.email,\n        roles: action.payload.user.roles,\n        verified: Boolean(action.payload.user.verified),\n      } as UserWithToken\n    },\n    logout(state) {\n      removeUserFromStorage()\n      delete state.user\n    },\n  },\n})\n\nexport const selectUser = (state: RootState) => state.user.user\n// Action creators are generated for each case reducer function\nexport const { login, logout } = userSlice.actions\n\nexport default userSlice.reducer\n","import React, { useEffect, useState } from 'react'\nimport AceEditor from 'react-ace'\nimport { Form, FormControl } from 'react-bootstrap'\nimport { Resizable } from 'react-resizable'\n\nexport const AceControl = ({ name, storedData, label, required, register, placeholder, formState, setValue, getValues, defaultHight }: any) => {\n  const { errors, touchedFields, dirtyFields } = formState\n  const error = errors && errors[name]\n  const touched = touchedFields && touchedFields[name]\n  const dirty = dirtyFields && dirtyFields[name]\n  const [height, setHeight] = useState(defaultHight || 300)\n\n  const value = getValues(name)\n\n  useEffect(() => {\n    if (storedData && storedData[name]) setValue(name, storedData[name])\n  }, [storedData])\n\n  const onResize = (_: unknown, { size }: any) => {\n    setHeight(size.height)\n  }\n\n  return (\n    <React.Fragment>\n      <Form.Group controlId={`form-${name}`}>\n        <Form.Label>\n          {label} {required && '*'}\n        </Form.Label>\n\n        <Resizable width={1000} height={height} resizeHandles={['s']} onResize={onResize} minConstraints={[100, 100]}>\n          <div style={{ height: `${height}px` }}>\n            <AceEditor\n              width={`100%`}\n              height={`${height - 15}px`}\n              value={value != null ? value : storedData && storedData[name]}\n              onChange={(value) => {\n                setValue(name, value)\n              }}\n              editorProps={{ $blockScrolling: true }}\n              name={`ace-control-${name}`}\n            />\n          </div>\n        </Resizable>\n\n        <FormControl.Feedback type=\"valid\">Perfect!</FormControl.Feedback>\n        <Form.Control.Feedback type=\"invalid\">Please provide a valid {label}.</Form.Control.Feedback>\n      </Form.Group>\n    </React.Fragment>\n  )\n}\n\nexport default AceControl\n","import React, { useEffect } from 'react'\nimport { Form, FormControl } from 'react-bootstrap'\n\nexport const Control = ({name, storedData, label, required, register, placeholder, formState, setValue}:any) => {\n    const {errors, touchedFields, dirtyFields} = formState\n    const error = (errors && errors[name])\n    const touched = touchedFields && touchedFields[name]\n    const dirty = dirtyFields && dirtyFields[name]\n    \n    useEffect(()=>{\n      if(storedData && storedData[name]) setValue(name, storedData[name])\n    },[storedData])\n  \n    return (\n      <React.Fragment >\n        <Form.Group controlId={`form-${name}`}>\n            <Form.Label>{label} {required && '*'}</Form.Label>\n            <Form.Control\n                type=\"text\"\n                placeholder={placeholder}\n                {...register(name as any, {required})}\n                \n                isInvalid={error}\n                /* isValid={dirty && !error} */\n              />\n            \n            <FormControl.Feedback type=\"valid\">\n              Perfect!\n            </FormControl.Feedback>\n            <Form.Control.Feedback type=\"invalid\">\n              Please provide a valid {label}.\n            </Form.Control.Feedback>\n          </Form.Group>\n        </React.Fragment>\n    )\n  }\n\n  export default Control","import * as React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nexport const GraphQLError = ({graphQLError}:any) =>{\n    return (<>\n        {graphQLError.map((gqe:string)=>(<Alert variant={'danger'}>{gqe}</Alert>))}\n        </>\n)}","import React, { useState } from 'react'\nimport { Alert, Button, Form, Tab, Tabs } from 'react-bootstrap'\nimport { SelectCallback } from 'react-bootstrap/esm/helpers'\nimport { useForm } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\nimport { useHistory } from 'react-router-dom'\nimport { selectUser } from '../../app/reducers/userSlice'\nimport AceControl from '../../components/Editor/AceControl'\nimport Control from '../../components/Editor/Control'\nimport { GraphQLError } from './GraphQLError'\n\nexport const ProjectEditForm = ({ onSubmit, storedData, graphQlError, projectId }: any) => {\n  const user = useSelector(selectUser) || { id: null }\n  const history = useHistory()\n\n  const [selectedTab, setSelectedTab] = useState('main')\n  const reactForm = useForm()\n  const { register, handleSubmit, formState, setValue, getValues, watch } = reactForm\n\n  const processSubmit = (data: any) => {\n    onSubmit(data)\n  }\n\n  const onTabSelect: SelectCallback = (tabKey) => {\n    if (tabKey === 'exports') {\n      history.replace(`/user/projects/${projectId}/exports`)\n    }\n\n    if (tabKey === 'files') {\n      history.replace(`/user/projects/${projectId}/files`)\n    }\n\n    setSelectedTab(tabKey || '')\n  }\n\n  return (\n    <Tabs className=\"base-edit-tabs\" activeKey={selectedTab} onSelect={onTabSelect}>\n      <Tab eventKey={'main'} title={'Main'}>\n        <Form onSubmit={handleSubmit(processSubmit)}>\n          <Control name={'name'} label={'Service name (SERVICE_NAME)'} required={true} storedData={storedData} {...reactForm} />\n          {graphQlError?.length > 0 && <GraphQLError graphQLError={graphQlError} />}\n          <AceControl name={'models'} label={'Schema'} {...reactForm} storedData={storedData} />\n          <hr />\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </Tab>\n      <Tab eventKey={'email'} title={'Email'}>\n        <Form onSubmit={handleSubmit(processSubmit)}>\n          <Control name={'emailWelcomeTitle'} label={'Welcome Email Title'} storedData={storedData} {...reactForm} placeholder={'Wellcome in {{SERVICE_NAME}}'} />\n          <AceControl\n            name={'emailWelcomeMessage'}\n            label={'Welcome Email Message'}\n            {...reactForm}\n            storedData={storedData}\n            placeholder={\n              'Please verify your email by click to this <a href=\"{{SERVICE_URL}}/email/${user.__verifyToken}/verify\">{{SERVICE_URL}}/email/${user.__verifyToken}/verify</a>'\n            }\n          />\n          <Control\n            name={'emailForgottenPasswordTitle'}\n            label={'Reset Password Email Title'}\n            storedData={storedData}\n            {...reactForm}\n            placeholder={'Change password request for {{SERVICE_NAME}}'}\n          />\n          <AceControl\n            name={'emailForgottenPasswordMessage'}\n            label={'Change password request for {{SERVICE_NAME}}'}\n            {...reactForm}\n            storedData={storedData}\n            placeholder={\n              'We recaive request about reset Your password. If is not your action, please ignore this message. If you want reset your password follow instruction on this link <a href=\"{{SERVICE_URL}}/forgotten-password/${user.__resetPasswordToken}\">{{SERVICE_URL}}/forgotten-password/${user.__resetPasswordToken}</a>'\n            }\n          />\n          <hr />\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </Tab>\n      <Tab eventKey={'login'} title={'Login'}>\n        <Form onSubmit={handleSubmit(processSubmit)}>\n          <h2>Github</h2>\n          <Control name={'loginGithubId'} label={'ID'} storedData={storedData} {...reactForm} />\n          <Control name={'loginGithubSecret'} label={'Secret'} storedData={storedData} {...reactForm} />\n          <Control name={'loginGithubCallbackURL'} label={'CallbackURL'} storedData={storedData} {...reactForm} />\n          <hr />\n          <h2>Google</h2>\n          <Control name={'loginGmailId'} label={'ID'} storedData={storedData} {...reactForm} />\n          <Control name={'loginGmailSecret'} label={'Secret'} storedData={storedData} {...reactForm} />\n          <Control name={'loginGmailCallbackURL'} label={'CallbackURL'} storedData={storedData} {...reactForm} />\n          <hr />\n          <h2>Facebook</h2>\n          <Control name={'loginFacebookId'} label={'ID'} storedData={storedData} {...reactForm} />\n          <Control name={'loginFacebookSecret'} label={'Secret'} storedData={storedData} {...reactForm} />\n          <Control name={'loginFacebookCallbackURL'} label={'CallbackURL'} storedData={storedData} {...reactForm} />\n          <hr />\n          <Button type=\"submit\">Save</Button>\n        </Form>\n      </Tab>\n      <Tab eventKey={'exports'} title={'Exports'} disabled={!projectId}></Tab>\n      <Tab eventKey={'files'} title={'Files'} disabled={!projectId}></Tab>\n    </Tabs>\n  )\n}\n","import React, {useState, useEffect, useCallback} from 'react'\nimport { Col, Form, Alert, Button, InputGroup, DropdownButton, Dropdown } from \"react-bootstrap\";\nimport './FilterItem.scss'\n\nconst basicOptionsName = {\n    contains : 'contains',\n    not_contains : 'not contains',\n    starts_with : 'starts with',\n    not_starts_with : 'not starts with',\n    ends_with : 'ends with',\n    not_ends_with : 'not ends with',\n    isEmpty : 'is empty',\n}\n\ntype basicOptionsNameType = 'contains' | 'not_contains' | 'starts_with' | 'not_starts_with' | 'ends_with' | 'not_ends_with' | 'isEmpty'\n\n\n\nexport interface IFilterItemParam {\n    fields: any[]\n    onChange: (filter: string | null) => void\n}\n\n  \n\nexport const FilterItem: React.FC<IFilterItemParam> = ({fields, onChange}) => {\n    const [fieldSelected, setFieldSelected] = useState(fields[0])\n    const [optionSelected, setOptionSelected] = useState('contains')\n    const [filterText, setFilterText] = useState('')\n    const [filter, setFilter] = useState<string|null>('null')\n\n    const onFieldChange = (field:any) => {\n        console.log('onFieldChange', field)\n        setFieldSelected(field)\n        processFilter(field, optionSelected, filterText)\n    }\n\n    const onOptionChange = (option:any) => {\n        console.log('onOptionChange', option)\n        setOptionSelected(option)\n        processFilter(fieldSelected, option, filterText)\n    }\n\n    const onFilterChange = (e:any) => {\n        const text = e.target.value\n        console.log('onFilterChange', e, text)\n        setFilterText(text)\n        processFilter(fieldSelected, optionSelected, text)\n    }\n\n    const doFilter = useCallback((f: string | null) => {\n        if(filter != f){\n            console.log('useFilter>>>', f)\n            setFilter(f)\n            onChange(f)\n        }\n    }, [filter, onChange, setFilter])\n\n    const processFilter = useCallback((field, option, text) => {\n        if(!text && option != 'isEmpty') {\n            doFilter(null)\n            return\n        }\n\n        const f = {} as any\n        f[`${field}_${option}`] = text\n        doFilter(f)\n\n    }, [doFilter] )\n\n    const gc = (o:any) => {\n        const o2 = o\n        return () => {\n            onFieldChange(o2)\n        }\n    }\n\n    const go = (o:any) => {\n        const o2 = o\n        return () => {onOptionChange(o2);}\n    }\n\n\n    return (\n        <InputGroup className=\"mb-3\">\n            <DropdownButton\n                className=\"field-option\"\n                as={InputGroup.Prepend}\n                variant=\"success\"\n                title={fieldSelected}\n                id=\"input-group-dropdown-0\" >\n                    {fields.map((o)=> (<Dropdown.Item key={o} onClick={gc(o)}>{o.toString()}</Dropdown.Item>))}\n            </DropdownButton>\n            <DropdownButton\n                className=\"select-option\"\n                as={InputGroup.Prepend}\n                variant=\"outline-link\"\n                title={basicOptionsName[optionSelected as basicOptionsNameType]}\n                id=\"input-group-dropdown-1\" >\n                    {Object.getOwnPropertyNames(basicOptionsName).map((o)=> (<Dropdown.Item key={o} onClick={go(o)}>{basicOptionsName[o as basicOptionsNameType]}</Dropdown.Item>))}\n            </DropdownButton>\n            <Form.Control value={filterText} onChange={onFilterChange}/>\n        </InputGroup>)\n\n}\n\nexport default FilterItem","import React from \"react\";\nimport { Link } from \"react-router-dom\";\nimport { Button } from 'react-bootstrap'\nimport './Row1.scss'\n\n\nexport interface IFilteredFieldDesc {\n  name: string\n  title?: string\n  component?: React.FC<any>\n}\n\nexport type IFilteredField = IFilteredFieldDesc | string\n\nexport interface IListRowParams {\n  item: any\n  field: IFilteredField\n}\n\nconst getElementFromField = (item: any, field: IFilteredField) => {\n  const fieldDesc = field as IFilteredFieldDesc\n\n  const names = fieldDesc.name ? fieldDesc.name.split('.') : (field as string).split('.')\n  const element = item[names[0]]\n\n  return {element, name: names[0], names}\n}\n\nexport const ListRowItem: React.FC<IListRowParams> = ({ item, field }) => {\n  const {element, name, names} = getElementFromField(item, field)\n\n  if(!element) {\n    return (<>ERR NOT EXIST:{name}</>)\n  }\n\n  if((field as IFilteredFieldDesc).component) {\n    const component = (field as IFilteredFieldDesc).component\n    return (<>{component && component({value:element, names, item})}</>)\n  }\n\n  if(element.substr && element.length > 50) {\n    return (<>{element.substr(0, 47)}...</>)\n  }\n\n  if(element.push && element.reduce && names.length > 1) {\n    return (<>{(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\n  }\n\n  return (\n    <>\n    {element}\n    </>\n  );\n};\n\n","import React, { useCallback, useMemo } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Button } from 'react-bootstrap'\nimport './Row1.scss'\nimport { ListRowItem, IFilteredField } from './RowItem'\n\nexport interface IListRowItem {\n  id: string\n  name: string\n  user: any\n}\n\nexport interface IListRowParams {\n  name: string\n  item: any\n  fields?: IFilteredField[]\n  onDelete: (obj: any) => void\n  showDelete?: boolean\n  onEdit?: (item: any) => void\n  getEditLink?: (item: unknown) => string\n}\n\nexport const ListRow: React.FC<IListRowParams> = ({ item, onDelete, name, fields = ['id'], showDelete = false, onEdit, getEditLink }) => {\n  const doEdit = useCallback(() => {\n    if (onEdit) onEdit(item)\n  }, [item, onEdit])\n\n  const editLink = useMemo(() => {\n    if (getEditLink) return getEditLink(item)\n    else return `/user/${name.toLowerCase()}/${item.id}`\n  }, [name, item, getEditLink])\n\n  return (\n    <React.Fragment>\n      <tr>\n        <td className=\"id\">{onEdit ? <span onClick={doEdit}>{item.id}</span> : <Link to={editLink}>{item.id}</Link>}</td>\n        {fields.map(\n          (field) =>\n            field !== 'id' && (\n              <td>\n                <ListRowItem item={item} field={field} />\n              </td>\n            ),\n        )}\n        {item.user && <td>{item.user.email}</td>}\n        {showDelete && (\n          <td className=\"right\">\n            <Button\n              variant=\"danger\"\n              size=\"sm\"\n              onClick={() => {\n                onDelete(item)\n              }}\n            >\n              delete\n            </Button>\n          </td>\n        )}\n      </tr>\n    </React.Fragment>\n  )\n}\n","import React from 'react'\nimport { Button, Modal } from 'react-bootstrap'\n\nexport interface IDeleteModalParams {\n  show: boolean\n  onHide: () => void\n  onDelete: (deleteObject: any) => void\n  category: string\n  deleteObject?: any\n  deleting?: boolean\n}\n\nexport const DeleteModal: React.FC<IDeleteModalParams> = ({ show, onHide, onDelete, category, deleteObject, deleting }) => {\n  const onDeleteAction = () => {\n    if (!deleting) {\n      onDelete(deleteObject)\n    }\n  }\n\n  return (\n    <div>\n      <Modal show={show} onHide={onHide}>\n        <Modal.Header closeButton>\n          <div>\n            <Modal.Title>\n              Delete {'>>'} {deleteObject && deleteObject.name} {'<<'}\n            </Modal.Title>\n          </div>\n        </Modal.Header>\n\n        <Modal.Body>\n          {!deleting ? (\n            <p>\n              Are you sure, you want delete {category} item with name <b>'{deleteObject && deleteObject.name}'</b> and id <i>'{deleteObject && deleteObject.id}'</i>\n            </p>\n          ) : (\n            <p>\n              Deleting {category} item with name '{deleteObject && deleteObject.name}' and id '{deleteObject && deleteObject.id}' ...\n            </p>\n          )}\n        </Modal.Body>\n\n        <Modal.Footer>\n          <Button disabled={deleting} variant=\"danger\" type=\"submit\" onClick={onDeleteAction}>\n            Delete\n          </Button>\n          <Button disabled={deleting} variant=\"primary\" onClick={onHide}>\n            Close\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    </div>\n  )\n}\n\nexport default DeleteModal\n","import React, { useState } from 'react'\nimport { Link } from 'react-router-dom'\nimport { Table as BTable, Button } from 'react-bootstrap'\n\nimport { useQuery, useMutation } from '@apollo/client'\nimport { IListRowParams, ListRow } from './Row1'\nimport Loading from '../Loading/Loading'\nimport DeleteModal from '../DeleteModal/DeleteModal'\nimport Unauthorized from '../Unauthorized/Unauthorized'\nimport { DocumentNode } from 'graphql'\nimport { IFilteredField } from './RowItem'\n\nexport interface IFilterWithParams {\n  filter?: string\n  params?: string\n}\n\nexport interface ITableQueries {\n  ADMIN_LIST_QUERY: DocumentNode\n  USER_LIST_QUERY: DocumentNode\n  DELETE_MUTATION: DocumentNode\n}\n\nexport interface ITableList {\n  userId?: string\n  adminMode?: boolean\n  filter: any\n  queries: ITableQueries\n  fields?: IFilteredField[]\n  name: string\n  onEdit: IListRowParams['onEdit']\n  getEditLink?: IListRowParams['getEditLink']\n}\n\nexport const Table: React.FC<ITableList> = ({ filter, name, adminMode = false, queries, fields, onEdit, getEditLink }) => {\n  const [unauthorized, setUnauthorized] = useState(false)\n  const [showDeleteModal, setShowDeleteModal] = useState(false)\n  const [deleteObject, setDeleteObject] = useState(null)\n  const [showDeleteDialog, setShowDeleteDialog] = useState(false)\n  const [deletingOnDeleteDialog, setDeletingOnDeleteDialog] = useState(false)\n\n  const [loading, setLoading] = useState(true)\n  const [data, setData] = useState<any>([])\n  const [error, setError] = useState<any>()\n\n  const { refetch: userRefetch, loading: userLoading } = useQuery(adminMode ? queries.ADMIN_LIST_QUERY : queries.USER_LIST_QUERY, {\n    onError: (e) => {\n      console.log('onError >>> ', e.message)\n      if (e.message == 'GraphQL error: Unauhorized') {\n        setUnauthorized(true)\n      } else {\n        setError(e)\n      }\n    },\n    onCompleted: (d) => {\n      console.log('user: onCompleted', d)\n      setLoading(false)\n\n      const dataFields = Object.getOwnPropertyNames(d)\n      if (dataFields.length > 0 && d[dataFields[0]].length > 0) {\n        setData(d[dataFields[0]])\n      } else {\n        setData([])\n      }\n    },\n    variables: { filter },\n  })\n\n  const [deleteProjectMutation, { loading: deleteLoading, error: deleteError }] = useMutation(queries.DELETE_MUTATION, {\n    errorPolicy: 'none',\n    onCompleted: (data: any) => {\n      console.log('DELETE', data.deleteProject)\n      onHideDidaloDelete()\n      userRefetch()\n    },\n    onError: (e) => {\n      console.log('onError >>> ', e.message)\n      if (e.message == 'GraphQL error: Unauhorized') {\n        setUnauthorized(true)\n      }\n    },\n  })\n\n  const onHideDidaloDelete = () => {\n    setShowDeleteDialog(false)\n    setDeleteObject(null)\n  }\n\n  const onDelete = (obj: any) => {\n    setDeletingOnDeleteDialog(false)\n    setShowDeleteDialog(true)\n    setDeleteObject(obj)\n  }\n\n  const doDelete = (deleteObject: any) => {\n    setDeletingOnDeleteDialog(true)\n    deleteProjectMutation({\n      variables: {\n        id: deleteObject.id,\n      },\n    })\n  }\n\n  if (unauthorized) {\n    return <Unauthorized where={'projects'} />\n  }\n  if (userLoading) return <Loading what={'projects'} />\n\n  return (\n    <div>\n      {error && <div>{`Error! ${error.message}`}</div>}\n\n      <BTable responsive>\n        <thead>\n          <tr>\n            <th>Id</th>\n            {fields?.map((f) => f !== 'id' && <th>{(f as any).name ? (f as any).name : f}</th>)}\n            {adminMode && <th>User</th>}\n            <th></th>\n          </tr>\n        </thead>\n        <tbody>\n          {data.length &&\n            data.map((projectItem: any) => (\n              <ListRow name={name} item={projectItem} onDelete={onDelete} fields={fields} showDelete={adminMode} onEdit={onEdit} getEditLink={getEditLink} />\n            ))}\n        </tbody>\n      </BTable>\n\n      <DeleteModal\n        show={showDeleteDialog}\n        onHide={onHideDidaloDelete}\n        onDelete={doDelete}\n        category={'project'}\n        deleteObject={deleteObject}\n        deleting={deletingOnDeleteDialog}\n      />\n    </div>\n  )\n}\n\nexport default Table\n","import React, { useState, useEffect, useCallback } from 'react'\nimport { Link, useHistory } from 'react-router-dom'\nimport FilterItem from './FilterItem'\nimport { Navbar, Button } from 'react-bootstrap'\nimport './FilteredList.scss'\nimport { IFilteredField } from './RowItem'\nimport Table, { ITableList, ITableQueries } from './Table'\n\nexport interface IProjectFilterList {\n  name: string\n  userId?: string\n  adminMode?: boolean\n  queries: ITableQueries\n  fields: IFilteredField[]\n  filter?: any\n  onCreate?: () => void\n  onEdit?: ITableList['onEdit']\n  getEditLink?: ITableList['getEditLink']\n}\n\nconst createFilter = () => {\n  const obj: any = []\n  obj.name = 'AND'\n  return { AND: obj }\n}\n\nconst addAnd = (node: any, filter: any) => {\n  let obj: any = filter\n\n  if (node.name != 'AND') {\n    obj = [obj]\n    obj.name = 'AND'\n  }\n\n  node.push(obj)\n}\n\nconst filterDestructNode = (node: any) => {\n  let filter = ''\n\n  for (const n of node) {\n    if (n.name && n.length > 0) {\n      filter += `,${filterDestructNode(n)}`\n    } else {\n      filter += `,{${n.filter}}`\n    }\n  }\n\n  return `{${node.name}:[${filter.substr(1)}]}`\n}\n\nconst filterDestruct = (filter: any) => {\n  const fo = {\n    filter: '',\n    params: '',\n  }\n\n  fo.filter = filter.AND.length > 0 ? `(filter: ${filterDestructNode(filter.AND)})` : ''\n  fo.params = fo.params.length > 2 ? `(${fo.params.substr(1)})` : ''\n\n  return fo\n}\n\nexport const FilteredList: React.FC<IProjectFilterList> = ({ name, userId, adminMode = false, queries, fields, filter: staticFilter, onCreate, onEdit, getEditLink }) => {\n  const [filter, setFilter] = useState(adminMode ? createFilter() : null)\n  const history = useHistory()\n\n  // console.log(filter, listFilter)\n  const createDefaultFilter = (userId?: string) => {\n    const defaultFilter = createFilter()\n\n    if (userId) {\n      addAnd(defaultFilter.AND, { user_every: { id: userId } })\n    }\n\n    if (staticFilter) {\n      addAnd(defaultFilter.AND, staticFilter)\n    }\n\n    return defaultFilter\n  }\n\n  const processFilter = (filter: any) => {\n    const filterDestructed = filterDestruct(filter)\n\n    console.log('processFilter', { filter, filterDestructed })\n\n    setFilter(filter)\n  }\n\n  useEffect(() => {\n    const defaultFilter = createDefaultFilter(userId)\n    processFilter(defaultFilter)\n  }, [userId])\n\n  const onFilterChange = useCallback(\n    (f: string | null) => {\n      const defaultFilter = createDefaultFilter(userId)\n\n      if (f) {\n        addAnd(defaultFilter.AND, f)\n      }\n\n      processFilter(defaultFilter)\n    },\n    [userId],\n  )\n\n  const onCreateNew = () => {\n    if (onCreate) onCreate()\n    else history.push('/user/' + name.toLowerCase() + '/create')\n  }\n\n  // if is not adminMode,\n  // the useEffect will update filter with user after render\n  // but in render is already called the query\n  // but the query will call without properly setuped filter and return unauthorized\n  if (!adminMode && !filter) {\n    return null\n  }\n\n  return (\n    <div className=\"base-filtered-list\">\n      <section>\n        <h1>{name}</h1>\n        <div className=\"row-head\">\n          <FilterItem fields={fields} onChange={onFilterChange} />\n          <div></div>\n        </div>\n        <div className=\"row-table\">\n          <Table name={name} filter={filter} queries={queries} adminMode={adminMode} fields={fields} onEdit={onEdit} getEditLink={getEditLink} />\n          <Button onClick={onCreateNew}>Create New</Button>\n        </div>\n      </section>\n    </div>\n  )\n}\n\nexport default FilteredList\n","export default __webpack_public_path__ + \"static/media/3.017f06c9.png\";","import React from 'react'\nimport { useHistory } from 'react-router-dom'\n\nimport './Card.scss'\nimport logo from './3.png'\nimport { Alert, Button } from 'react-bootstrap'\n\ninterface ICards {\n  project: any\n  onRemove: (project: any) => void\n}\n\nexport const Card: React.FC<ICards> = ({ project, onRemove }) => {\n  const history = useHistory()\n\n  const projectConnectLink = `https://graphql.monster/client/${project.user.id}/project/${project.id}/graphql`\n\n  const onEdit = () => {\n    history.push('/user/projects/' + project.id)\n  }\n\n  const onExports = () => {\n    history.push(`/user/projects/${project.id}/exports`)\n  }\n\n  const onFiles = () => {\n    history.push(`/user/projects/${project.id}/files`)\n  }\n\n  const onPlayground = () => {\n    history.push(`/user/projects/${project.id}/graphiql`)\n  }\n\n  return (\n    <div className=\"projectCard\">\n      <div>\n        <img className=\"projectCardImg\" src={logo} alt=\"...\" />\n      </div>\n      <div className=\"\">\n        <div>\n          <h4 className=\"projectCardName\">{`${project.name} (basic)`}</h4>\n          <h5>{project.domain}</h5>\n          <Alert variant=\"warning\">Be aware system is in beta mode, not store any importand data without back-up. This is only for demostration or study purposes</Alert>\n          <form>\n            <div className=\"input-group\">\n              <input type=\"text\" className=\"form-control\" value={projectConnectLink} placeholder=\"Project connect link\" id=\"copy-input\" />\n              <span className=\"input-group-btn\">\n                <Button\n                  className=\"btn btn-default\"\n                  onClick={() => {\n                    navigator.clipboard.writeText(projectConnectLink)\n                  }}\n                  title=\"Copy to clipboard\"\n                >\n                  Copy\n                </Button>\n              </span>\n            </div>\n          </form>\n        </div>\n\n        <div className=\"projectCardButtons\">\n          <button type=\"button\" className=\"btn btn-sm btn-primary projectCardButtons\" onClick={onEdit}>\n            Configuration\n          </button>\n          <button type=\"button\" className=\"btn btn-sm btn-primary projectCardButtons\" onClick={onExports}>\n            Exports\n          </button>\n          <button type=\"button\" className=\"btn btn-sm btn-primary projectCardButtons\" onClick={onFiles}>\n            Files\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-sm btn-primary projectCardButtons\"\n            onClick={onPlayground}\n            title=\"In Admin Playground button you will connect to GraphQL playground with admin rights\"\n          >\n            Admin Playground\n          </button>\n          <button\n            type=\"button\"\n            className=\"btn btn-sm btn-danger projectCardButtons\"\n            onClick={() => {\n              onRemove(project)\n            }}\n          >\n            Delete\n          </button>\n        </div>\n      </div>\n    </div>\n  )\n}\n\nexport default Card\n","import React from 'react'\nimport DeleteModal from '../../components/DeleteModal/DeleteModal'\nimport Card from './Card'\n\nimport './ProjectCards.scss'\n\ninterface IProjectCards {\n  projects?: any[]\n  onRemove: (project: any) => void\n}\n\nexport const ProjectCards: React.FC<IProjectCards> = ({ projects, onRemove }) => {\n  if (!projects || projects.length < 1) {\n    return (\n      <div className=\"projectCards\">\n        <div className=\"alert alert-info\" role=\"alert\">\n          You do not have any project created, please start with creating a project\n        </div>\n      </div>\n    )\n  }\n\n  return (\n    <div className=\"projectCards\">\n      {projects.map((project) => {\n        return (\n          <div className=\"projectSingleCard\">\n            <Card project={project} onRemove={onRemove} />\n          </div>\n        )\n      })}\n    </div>\n  )\n}\n\nexport default ProjectCards\n","import React, { useState, useEffect } from 'react'\nimport FilteredList from '../../components/List1/FilteredList'\nimport gql from 'graphql-tag'\nimport { Link, useHistory } from 'react-router-dom'\nimport ProjectCards from './ProjectCards'\nimport { Button } from 'react-bootstrap'\nimport { useMutation, useQuery } from '@apollo/client'\nimport { selectUser } from '../../app/reducers/userSlice'\nimport { useSelector } from 'react-redux'\nimport DeleteModal from '../../components/DeleteModal/DeleteModal'\n\nexport const USER_LIST_QUERY = gql`\n  query allProjects1($filter: ProjectFilter) {\n    allProject(filter: $filter) {\n      id\n      name\n      models\n      modelsInfo\n      user {\n        id\n        email\n      }\n    }\n  }\n`\n\nconst ADMIN_LIST_QUERY = gql`\n  query allProjects($filter: ProjectFilter) {\n    allProject(filter: $filter) {\n      id\n      name\n      models\n      user {\n        id\n        email\n      }\n    }\n  }\n`\n\nconst DELETE_MUTATION = gql`\n  mutation deleteProject($id: ID!) {\n    removeProject(id: $id) {\n      id\n    }\n  }\n`\n\nconst GraphiqlLink: React.FC<{ value: any; names?: any; item: any }> = ({ value, names, item }) => {\n  return <Link to={`/user/projects/${item.id}/graphiql`}>playground</Link>\n}\n\nexport const ProjectList: React.FC<{ adminMode?: boolean }> = ({ adminMode = false }) => {\n  const history = useHistory()\n  const [data, setData] = useState<any[]>()\n  const user = useSelector(selectUser) || { id: null }\n\n  const [projectForRemove, setProjectForRemove] = useState<any>(null)\n\n  const onHideDidaloDelete = () => {\n    setProjectForRemove(null)\n  }\n\n  const onRemove = (project: any) => {\n    setProjectForRemove(project)\n  }\n\n  const doRemove = async () => {\n    setProjectForRemove(null)\n    await removeMutation({ variables: { id: projectForRemove.id } })\n  }\n\n  const { refetch, loading: userLoading } = useQuery(USER_LIST_QUERY, {\n    onError: (e) => {\n      console.log('onError >>> ', e.message)\n      if (e.message == 'GraphQL error: Unauhorized') {\n        // setUnauthorized(true)\n      } else {\n        // setError(e)\n      }\n    },\n    onCompleted: (d) => {\n      console.log('user: onCompleted', d)\n      //setLoading(false)\n\n      const dataFields = Object.getOwnPropertyNames(d)\n      if (dataFields.length > 0 && d[dataFields[0]].length > 0) {\n        setData(d[dataFields[0]])\n      } else {\n        setData([])\n      }\n    },\n    variables: {\n      filter: {\n        user_every: { id: user.id },\n      },\n    },\n  })\n\n  const [removeMutation] = useMutation(DELETE_MUTATION, {\n    errorPolicy: 'none',\n    update: (cache, { data }) => {\n      const removeProject = data.removeProject\n\n      if (removeProject) {\n        const cacheRead = cache.readQuery({\n          query: USER_LIST_QUERY,\n          variables: {\n            filter: { user_every: { id: user.id } },\n          },\n        }) as any\n\n        cache.writeQuery({\n          query: USER_LIST_QUERY,\n          variables: {\n            filter: { user_every: { id: user.id } },\n          },\n          data: {\n            allProject: cacheRead.allProject.filter((project: any) => project.id !== removeProject.id),\n          },\n        })\n        refetch()\n        console.log(data)\n      }\n    },\n  })\n\n  const onCreateNew = () => {\n    history.push('/user/projects/create')\n  }\n\n  return (\n    <>\n      <div className=\"center-y relative \" data-scroll-speed=\"4\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-10 offset-md-1\">\n              <div className=\"col-md-12 \">\n                <ProjectCards projects={data} onRemove={onRemove} />\n                <Button onClick={onCreateNew}>Create New Project</Button>\n              </div>\n              <div className=\"clearfix\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n      <DeleteModal show={!!projectForRemove} onHide={onHideDidaloDelete} onDelete={doRemove} category={'project'} deleteObject={projectForRemove} />\n    </>\n  )\n}\n\nexport const ProjectAdminList: React.FC<{ adminMode?: boolean }> = () => {\n  const userId = localStorage.getItem('user.id') || ''\n  return (\n    <>\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-10 offset-md-1\">\n              <div className=\"col-md-12 text-center\">\n                {\n                  <FilteredList\n                    name={'Projects'}\n                    fields={['name', { name: 'id', title: 'playground', component: GraphiqlLink }]}\n                    userId={userId}\n                    adminMode={true}\n                    queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }}\n                  />\n                }\n              </div>\n\n              <div className=\"clearfix\"></div>\n            </div>\n          </div>\n        </div>\n      </div>\n    </>\n  )\n}\n\nexport default ProjectList\n","import { loader } from 'graphql.macro'\nimport * as _ from 'lodash'\nimport React, { useState } from 'react'\nimport AceEditor from 'react-ace'\nimport { Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router'\nimport BaseEditor from '../../components/Editor/BaseEditor'\nimport { TControl, TField } from '../../components/EditorEx/Control'\nimport { ProjectEditForm } from './EditForm'\nimport { USER_LIST_QUERY } from './List'\n\nimport 'ace-builds/src-noconflict/mode-java'\nimport 'ace-builds/src-noconflict/theme-github'\n\nconst CREATE_MUTATION = loader('./graphql/create.gql')\nconst UPDATE_MUTATION = loader('./graphql/update.gql')\nconst QUERY = loader('./graphql/query.gql')\n\nconst ProjectSchemaControl: React.FC<TControl> = ({ onChange, value }) => (\n  <React.Fragment>\n    <AceEditor\n      width=\"1000px\"\n      value={value}\n      onChange={(value) => {\n        console.log(value)\n        onChange({ target: { value } })\n      }}\n      name=\"UNIQUE_ID_OF_DIV\"\n      editorProps={{ $blockScrolling: true }}\n    />\n    {/* <Form.Control as=\"textarea\" rows={30} {...{onChange, value}} /> */}\n  </React.Fragment>\n)\n\nconst TextEditControl: React.FC<TControl> = ({ onChange, value, placeholder }) => (\n  <React.Fragment>\n    <Form.Control as=\"textarea\" rows={3} {...{ onChange, value }} placeholder={placeholder} />\n  </React.Fragment>\n)\n\nconst ProjectErrorControl: React.FC<TControl> = ({ onChange, value }) => (\n  <>\n    {value ? (\n      <div className=\"alert alert-danger\" role=\"alert\">\n        {value}\n      </div>\n    ) : (\n      'all good'\n    )}\n  </>\n)\n\nconst SchemaTab = [\n  { label: 'Service name (SERVICE_NAME)', name: 'name', placeholder: 'your-service-name' },\n  { name: 'models', label: 'Schema', control: ProjectSchemaControl },\n]\n\nconst EmailTab: TField[] = [\n  // {label: 'Service name (same as project name)', name: 'name', placeholder: 'service name'},\n  { label: 'Service url (SERVICE_URL)', name: 'domain', placeholder: 'http(s)://your-service.domain' },\n  { label: 'Email from', name: 'email', placeholder: 'info@your-service.domain' },\n  { label: 'Welcome Email Title', name: 'emailWelcomeTitle', placeholder: 'Wellcome in {{SERVICE_NAME}}' },\n  {\n    label: 'Welcome Email Message',\n    name: 'emailWelcomeMessage',\n    control: TextEditControl,\n    placeholder:\n      'Please verify your email by click to this <a href=\"{{SERVICE_URL}}/email/${user.__verifyToken}/verify\">{{SERVICE_URL}}/email/${user.__verifyToken}/verify</a>',\n  },\n  { label: 'Reset Password Email Title', name: 'emailForgottenPasswordTitle', placeholder: 'Change password request for {{SERVICE_NAME}}' },\n  {\n    label: 'Reset Password Email Message',\n    name: 'emailForgottenPasswordMessage',\n    control: TextEditControl,\n    placeholder:\n      'We recaive request about reset Your password. If is not your action, please ignore this message. If you want reset your password follow instruction on this link <a href=\"{{SERVICE_URL}}/forgotten-password/${user.__resetPasswordToken}\">{{SERVICE_URL}}/forgotten-password/${user.__resetPasswordToken}</a>',\n  },\n]\n\nconst LoginTab = [\n  { label: 'Facebook:ID', name: 'loginFacebookId' },\n  { label: 'Facebook:SECRET', name: 'loginFacebookSecret' },\n  { label: 'Facebook:CallbackURL', name: 'loginFacebookCallbackURL' },\n\n  { label: 'Github:Id', name: 'loginGithubId' },\n  { label: 'Github:Secret', name: 'loginGithubSecret' },\n  { label: 'Github:CallbackURL', name: 'loginGithubCallbackURL' },\n\n  { label: 'Gmail:ID', name: 'loginGmailId' },\n  { label: 'Gmail:Secret', name: 'loginGmailSecret' },\n  { label: 'Gmail:CallbackURL', name: 'loginGmailCallbackURL' },\n]\n\nexport const ProjectEdit = (data: any) => {\n  const userId = localStorage.getItem('user.id')\n  const projectId = _.get(data, 'match.params.projectId')\n  const [key, setKey] = useState<string>('home')\n\n  const [error, setError] = useState('')\n  const history = useHistory()\n\n  const updateCache: (cache: any, data: any) => void = (cache, { data }) => {\n    const createProject = data.createProject\n\n    if (createProject) {\n      const cacheRead = cache.readQuery({\n        query: USER_LIST_QUERY,\n        variables: {\n          filter: { user_every: { id: userId } },\n        },\n      })\n\n      cache.writeQuery({\n        query: USER_LIST_QUERY,\n        variables: {\n          filter: { user_every: { id: userId } },\n        },\n        data: {\n          allProject: [...cacheRead.allProject, createProject],\n        },\n      })\n\n      console.log(cacheRead)\n    }\n  }\n\n  const renameError = (error: string) => {\n    const dupkeyRegEx = /index: name_1_user_1 dup key: { name: \"(.*?)\"/\n\n    const dupkeyMatch = error.match(dupkeyRegEx)\n    if (dupkeyMatch) {\n      return `Field project name have to be unique, you want '${dupkeyMatch[1]}' what is already in your project list`\n    }\n\n    const pathNameRegEx = /validation failed: name: Path `name` is required./\n    const pathNameMatch = error.match(pathNameRegEx)\n    if (pathNameMatch) {\n      return `Field project name can't be empty`\n    }\n\n    return error\n  }\n\n  const onCompleted = () => {\n    history.push('/user/projects')\n  }\n\n  return (\n    <div className={`base-edit-project base-edit`}>\n      <BaseEditor\n        externId={projectId}\n        name={'Project'}\n        query={{\n          CREATE_MUTATION: CREATE_MUTATION,\n          UPDATE_MUTATION: UPDATE_MUTATION,\n          QUERY,\n        }}\n        updateCache={updateCache}\n      >\n        {(storedData: any, onSubmit: any, errors: any) => <ProjectEditForm storedData={storedData} onSubmit={onSubmit} graphQlError={errors} projectId={projectId} />}\n      </BaseEditor>\n    </div>\n  )\n}\n","import React from 'react'\nimport FilteredList from '../../components/List1/FilteredList'\nimport gql from 'graphql-tag'\nimport { useHistory, useParams } from 'react-router'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from '../../app/reducers/userSlice'\nimport { Link } from 'react-router-dom'\nimport { Tab, Tabs } from 'react-bootstrap'\nimport { SelectCallback } from 'react-bootstrap/esm/helpers'\n\nconst USER_LIST_QUERY = gql`\n  query allExport($filter: ExportFilter) {\n    allExport(filter: $filter) {\n      id\n      type\n      name\n    }\n  }\n`\n\nconst ADMIN_LIST_QUERY = gql`\n  query allExport($filter: ExportFilter) {\n    allExport(filter: $filter) {\n      id\n      type\n      name\n    }\n  }\n`\n\nconst DELETE_MUTATION = gql`\n  mutation deleteExport($id: ID!) {\n    deleteExport(id: $id) {\n      id\n    }\n  }\n`\n\nexport const UserList: React.FC<{ userId?: string; adminMode?: boolean }> = ({ userId, adminMode = false }) => {\n  const user = useSelector(selectUser)\n  const history = useHistory()\n  const params = useParams() as any\n\n  const onCreate = () => {\n    history.push(`/user/projects/${params.projectId}/exports/create`)\n  }\n\n  const getEditLink = (item: any) => `/user/projects/${params.projectId}/exports/${item.id}`\n\n  if (!user) return <></>\n\n  const onTabSelect: SelectCallback = (tabKey) => {\n    if (tabKey !== 'exports') {\n      history.replace(`/user/projects/${params.projectId}`)\n      // history\n    }\n  }\n\n  return (\n    <div className=\"base-edit\">\n      <Tabs className=\"base-edit-tabs\" activeKey={'exports'} onSelect={onTabSelect}>\n        <Tab eventKey={'main'} title={'Main'}></Tab>\n        <Tab eventKey={'email'} title={'Emails'}></Tab>\n        <Tab eventKey={'login'} title={'Logins'}></Tab>\n        <Tab eventKey={'exports'} title={'Exports'}>\n          <FilteredList\n            name={'Exports'}\n            fields={['id', 'name', 'type']}\n            userId={user.id}\n            adminMode={adminMode}\n            queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }}\n            filter={{ project_every: { id: params.projectId } }}\n            onCreate={onCreate}\n            // onEdit={onEdit}\n            getEditLink={getEditLink}\n          />\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nexport default UserList\n","import React, { useState, useEffect } from \"react\";\nimport { DropdownButton, Dropdown, Form } from \"react-bootstrap\";\nimport { useQuery, useMutation } from \"@apollo/client\";\nimport { getDataFromRaw } from \"../EditorEx/Edit\";\n\nexport const ConnectBase: React.FC<{value:any, names?:any, gql: any, item: any}> = ({value, names, gql, item}) => {\n    const element = value\n    const name = names.length>1 && names[1]\n    const elementTitle = element.push && element.reduce && names.length > 1 ? (element as any[]).reduce((p, e)=>p + `, ${e[name]}`, '').substr(2) : element\n  \n    const [title, setTitle] = useState(elementTitle)\n    const [data, setData] = useState<any[]>([])\n  \n    const { refetch: userRefetch, loading: userLoading } = useQuery(gql.QUERY, {\n      onError: (e) => {\n        console.log('ConnectBase:onError >>> ', e.message)\n        if(e.message == 'GraphQL error: Unauhorized'){\n          // setUnauthorized(true)\n        } else {\n          // setError(e)\n        }\n      }, onCompleted: (iraw) => {\n        console.log('user: onCompleted', iraw)\n        // setLoading(false)\n  \n        const dataFields = Object.getOwnPropertyNames(iraw)\n        if(dataFields.length > 0 && iraw[dataFields[0]].length > 0){\n          const raw = iraw[dataFields[0]]\n  \n          const final = raw.map((r:any)=>{\n            return {\n              id: r.id,\n              checked: title.indexOf(r[name]) !== -1,\n              label: r[name]\n            }\n          })\n  \n          setData(final)\n        } else {\n          setData([])\n        }\n        \n      },\n    });\n  \n    const [\n      addMutation,\n      { loading: addMutaionLoading, data: addMutationData, error: addMutationError }\n    ] = useMutation(gql.ADD, {\n      errorPolicy: \"none\",\n      onCompleted: (raw: any) => {\n        const data = getDataFromRaw(raw)\n        console.log(\"ADDED\", raw, data.id);\n      },\n      onError: () => {}\n    });\n  \n    const [\n      removeMutation,\n      { loading: removeMutaionLoading, data: removeMutationData, error: removeMutationError }\n    ] = useMutation(gql.REMOVE, {\n      errorPolicy: \"none\",\n      onCompleted: (raw: any) => {\n        const data = getDataFromRaw(raw)\n        console.log(\"REMOVE\", raw, data.id);\n      },\n      onError: () => {}\n    });\n  \n    const onChecked = (value:any) => {\n      const updated = data.map((d:any)=>{\n        if(d.label === value.label) {\n          d.checked = !d.checked\n        }\n        return {...d}\n      })\n  \n      const updateTitle = (updated as any[]).reduce((p, e) => {\n        if(e.checked) return `${p}, ${e.label}`\n        else return p\n      }, '').substr(1)\n  \n      console.log('onChecked:', {updated, value, updateTitle})\n  \n      if(value.checked){\n        addMutation({\n          variables: {\n            id1: value.id,\n            id2: item.id\n          }\n        });\n      } else {\n        removeMutation({\n          variables: {\n            id1: value.id,\n            id2: item.id\n          }\n        });\n      }\n      \n  \n      setData(updated)\n      setTitle(updateTitle)\n    }\n    \n    // if(element.push && element.reduce && names.length > 1) {\n    //   return (<>ahoj: {(element as any[]).reduce((p, e)=>p + e[names[1]], '')}</>)\n    // }\n  \n    return (<DropdownButton id=\"dropdown-basic-button\" title={title}>\n        {data && data.map((d:any)=>(\n        <Dropdown.Item  onClick={(e:any) => onChecked(d)} >\n          <Form.Check \n              type=\"checkbox\" \n              label={d.label} \n              checked={d.checked} />\n        </Dropdown.Item>))\n        }\n      </DropdownButton>)\n  }\n\n  export default ConnectBase","import React from 'react'\nimport FilteredList from '../../components/List1/FilteredList'\nimport gql from 'graphql-tag'\nimport ConnectBase from '../../components/List1/ConnectBase'\n\nconst USER_LIST_QUERY = gql`\n  query allUsers($filter: UserFilter) {\n    allUsers(filter: $filter) {\n      id\n      name\n      models\n    }\n  }\n`\n\nconst ADMIN_LIST_QUERY = gql`\n  query allUser($filter: UserFilter) {\n    allUser(filter: $filter) {\n      id\n      email\n      password\n      roles {\n        id\n        name\n      }\n    }\n  }\n`\n\nconst DELETE_MUTATION = gql`\n  mutation deleteUser($id: ID!) {\n    deleteUser(id: $id) {\n      id\n    }\n  }\n`\n\nconst USER_ROLE_QUERY = gql`\n  query allUserRoles {\n    allUserRoles {\n      id\n      name\n    }\n  }\n`\n\nconst ADD_MUTATION = gql`\n  mutation addToRoleOnUser($id1: ID!, $id2: ID!) {\n    addToRoleOnUser(rolesUserRoleId: $id1, usersUserId: $id2) {\n      rolesUserRole {\n        id\n      }\n      usersUser {\n        id\n      }\n    }\n  }\n`\n\nconst REMOVE_MUTATION = gql`\n  mutation removeFromRoleOnUser($id1: ID!, $id2: ID!) {\n    removeFromRoleOnUser(rolesUserRoleId: $id1, usersUserId: $id2) {\n      rolesUserRole {\n        id\n      }\n      usersUser {\n        id\n      }\n    }\n  }\n`\n\nconst ConnectRole: React.FC<{ value: any; names?: any; item: any }> = ({ value, names, item }) => {\n  const gql = {\n    QUERY: USER_ROLE_QUERY,\n    ADD: ADD_MUTATION,\n    REMOVE: REMOVE_MUTATION,\n  }\n\n  return <ConnectBase value={value} names={names} gql={gql} item={item} />\n}\n\nexport const UserList: React.FC<{ userId?: string; adminMode?: boolean }> = ({ userId, adminMode = false }) => {\n  return (\n    <div>\n      <FilteredList\n        name={'Users'}\n        fields={['email', 'password', { name: 'roles.name', component: ConnectRole }, 'roles.id']}\n        userId={userId}\n        adminMode={adminMode}\n        queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }}\n      />\n    </div>\n  )\n}\n\nexport default UserList\n","import React from 'react'\nimport { Badge } from 'react-bootstrap'\n\n\nexport const Logo = () => (\n    <div id=\"logo\">\n        <a href=\"/\">\n        <img alt=\"\" src=\"/logoPQL2.png\" />\n        <Badge className=\"beta-badge\" variant=\"danger\">beta</Badge>\n        </a>\n        \n    </div>\n)\n\nexport default Logo","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Nav from 'react-bootstrap/Nav'\nimport Badge from 'react-bootstrap/Badge'\nimport Logo from './Logo'\n\nconst UserHeader = ({user, onLogout}:any) =>  (  <div className=\"header-light transparent scroll-light container\">\n<div className=\"row\">\n  <div className=\"col-md-12\">\n    <div className=\"d-flex justify-content-between\">\n      <div className=\"align-self-center header-col-left\">\n        <Logo />\n      </div>\n      <div className=\"align-self-center ml-auto header-col-mid\">\n        <ul id=\"mainmenu\">\n        <li>\n            <Link to=\"/user/projects\">Projects</Link>\n          </li>\n          <li>\n            <a href=\"/documentation\">Documentation</a>\n            <ul>\n              <li><a href=\"/documentation#model\">Model</a></li>\n              <li><a href=\"/documentation#fields\">Fields</a></li>\n              <li><a href=\"/documentation#relations\">Relations</a></li>\n              <li><a href=\"/documentation#model-permissions\">Model Permissions</a></li>\n            </ul>\n          </li>\n          <li>\n            <Link to=\"#\">Administration</Link>\n            <ul>\n              <li><Link to=\"/admin/projects\">All projects</Link></li>\n              <li><Link to=\"/admin/subsribes\">All subsribes</Link></li>\n              <li><Link to=\"/admin/users\">All users</Link></li>\n              <li><Link to=\"/admin/roles\">All roles</Link></li>\n            </ul>\n          </li>\n        </ul>\n\n      </div>\n      <div className=\"align-self-center ml-auto header-col-right\">\n      <ul id=\"mainmenu\">\n                <li>\n                  <Link to=\"/user/info\">User</Link>\n                  <ul>\n                    <li><Link to=\"/user/info\" >User Info</Link></li>\n                    <li><Link to=\"/login\" onClick={onLogout}>Logout</Link></li>\n                    \n                  </ul>\n                </li>\n                </ul>\n                              <span id=\"menu-btn\"></span>\n      </div>\n      <div className=\"clearfix\"></div>\n    </div>\n  </div>\n</div>\n</div>)\n\nexport default UserHeader","import React, { useCallback } from \"react\"\nimport { NavDropdown } from \"react-bootstrap\"\nimport { useHistory } from \"react-router-dom\"\n\nexport const NavDropdownItem: React.FC<{ to: string }> = ({ to, children }) => {\n    const history = useHistory()\n\n    const goTo = useCallback(() => {\n        history.push(to)\n    }, [history, to])\n\n    return (<React.Fragment>\n        <NavDropdown.Item onClick={goTo}>{children}</NavDropdown.Item>\n    </React.Fragment>)\n}\nexport default NavDropdownItem","import React, { useCallback } from \"react\"\nimport { Nav, NavDropdown } from \"react-bootstrap\"\nimport { useHistory } from \"react-router-dom\"\n\nexport const NavLink: React.FC<{ to: string }> = ({ to, children }) => {\n    const history = useHistory()\n\n    const goTo = useCallback(() => {\n        history.push(to)\n    }, [history, to])\n\n    return (<React.Fragment>\n        <Nav.Link onClick={goTo}>{children}</Nav.Link>\n    </React.Fragment>)\n}\nexport default NavLink","import React, { useCallback } from 'react'\nimport { Button, Dropdown, Nav, Navbar, NavDropdown } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport NavDropdownItem from '../NavDropdownItem/NavDropdownItem'\nimport NavLink from '../NavLink/NavLink'\n\nimport './Header.css'\nimport Logo from './Logo'\n\nexport const PublicHeader = () => (\n  <Navbar bg=\"light\" expand=\"lg\">\n    <Navbar.Brand href=\"/\">Graphql Monster (beta)</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <NavLink to=\"/pricing\">Pricing</NavLink>\n        <NavDropdown title=\"Documentation\" id=\"basic-nav-dropdown\">\n          <NavDropdownItem to=\"/documentation/schema-description\">Schema description</NavDropdownItem>\n          <NavDropdownItem to=\"/documentation/optain-token\">Optain token</NavDropdownItem>\n        </NavDropdown>\n      </Nav>\n      <Nav className=\"mr-left\">\n        <Link className=\"\" to=\"/login\">Login</Link> or <Link className=\"\" to=\"/register\">Register</Link>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar>\n)\n\n\n\nexport default PublicHeader","import React from 'react'\nimport { Link } from 'react-router-dom'\nimport Dropdown from 'react-bootstrap/Dropdown'\nimport Nav from 'react-bootstrap/Nav'\nimport Badge from 'react-bootstrap/Badge'\nimport Logo from './Logo'\nimport { Navbar, NavDropdown } from 'react-bootstrap'\nimport NavDropdownItem from '../NavDropdownItem/NavDropdownItem'\nimport NavLink from '../NavLink/NavLink'\n\nconst UserHeader = ({ user, onLogout }: any) => (\n  <Navbar bg=\"light\" expand=\"lg\">\n    <Navbar.Brand href=\"#home\">Graphql Monster (beta)</Navbar.Brand>\n    <Navbar.Toggle aria-controls=\"basic-navbar-nav\" />\n    <Navbar.Collapse id=\"basic-navbar-nav\">\n      <Nav className=\"mr-auto\">\n        <NavLink to=\"/user/projects\">Projects</NavLink>\n        <NavDropdown title=\"Documentation\" id=\"basic-nav-dropdown\">\n          <NavDropdownItem to=\"/documentation/schema-description\">Schema description</NavDropdownItem>\n          <NavDropdownItem to=\"/documentation/optain-token\">Optain token</NavDropdownItem>\n        </NavDropdown>\n\n      </Nav>\n      <Nav className=\"mr-left\">\n        <NavDropdown title=\"User\" id=\"basic-nav-dropdown\">\n          <NavDropdown.Item href=\"/user/info\">User Info</NavDropdown.Item>\n          <NavDropdown.Divider />\n          <NavDropdown.Item href=\"/login\" onClick={onLogout}>Logout</NavDropdown.Item>\n        </NavDropdown>\n      </Nav>\n    </Navbar.Collapse>\n  </Navbar >\n)\n\nexport default UserHeader","import React from 'react'\nimport { useDispatch, useSelector } from 'react-redux'\nimport { logout, selectUser } from '../../app/reducers/userSlice'\nimport AdminHeader from './AdminHeader'\nimport PublicHeader from './PublicHeader'\nimport UserHeader from './UserHeader'\n\nexport const Header: React.FC = () => {\n  const user = useSelector(selectUser)\n  const dispatch = useDispatch()\n\n  const onLogout = () => {\n    dispatch(logout())\n  }\n\n  if (user && user.token) {\n    if (user.roles.find((r) => r.name === 'admin')) return <AdminHeader user={user} onLogout={onLogout} />\n    else return <UserHeader user={user} onLogout={onLogout} />\n  }\n\n  return <PublicHeader />\n}\n\nexport default Header\n","import axios from 'axios'\n\nexport const refreshToken = async () => {\n    const userId = localStorage.getItem('user.id')\n    const token = localStorage.getItem('user.token')\n    const refreshToken = localStorage.getItem('user.refreshToken')\n    return axios.post(`${process.env.REACT_APP_HOST}/graphql`, {\n        query: `\n            mutation refreshToken($userId: ID!, $token: String!, $refreshToken:String!){\n                refreshToken_v1(userId: $userId, token: $token, refreshToken:$refreshToken){\n                    token,\n                    refreshToken\n                }\n            }\n        `,\n        variables: {\n            userId,\n            token,\n            refreshToken\n        }\n    })\n}","import { ApolloClient, InMemoryCache, createHttpLink, ApolloLink, fromPromise } from '@apollo/client'\nimport { setContext } from '@apollo/client/link/context'\nimport { onError } from '@apollo/client/link/error'\nimport { refreshToken } from './refreshToken'\nimport { RetryLink } from '@apollo/client/link/retry'\n\nconst retryLink = new RetryLink({\n  attempts: (count, operation, error) => {\n    return true\n  },\n  delay: (count, operation, error) => {\n    return count * 1000 * Math.random()\n  },\n})\n\nlet isRefreshing = false\nlet pendingRequests: any = []\n\nconst resolvePendingRequests = () => {\n  //@ts-ignore\n  pendingRequests.map((callback) => callback())\n  pendingRequests = []\n}\n\n// https://able.bio/AnasT/apollo-graphql-async-access-token-refresh--470t1c8\nconst unautheniticatedAction = (forward: any, operation: any) => {\n  // error code is set to UNAUTHENTICATED\n  // when AuthenticationError thrown in resolver\n  let forward$\n\n  if (!isRefreshing) {\n    isRefreshing = true\n    forward$ = fromPromise(\n      refreshToken()\n        // @ts-ignore\n        .then(({ data }) => {\n          const {\n            data: { refreshToken_v1 },\n          } = data\n          localStorage.setItem('user.token', refreshToken_v1.token)\n          localStorage.setItem('user.refreshToken', refreshToken_v1.refreshToken)\n\n          // Store the new tokens for your auth link\n          resolvePendingRequests()\n          const oldHeaders = operation.getContext().headers\n          // modify the operation context with a new token\n          operation.setContext({\n            headers: {\n              ...oldHeaders,\n              authorization: `Bearer ${refreshToken_v1.token}`,\n            },\n          })\n          return forward(operation)\n        })\n        .catch((error) => {\n          pendingRequests = []\n          // Handle token refresh errors e.g clear stored tokens, redirect to login, ...\n          return\n        })\n        .finally(() => {\n          isRefreshing = false\n        }),\n    ).filter((value) => Boolean(value))\n  } else {\n    // Will only emit once the Promise is resolved\n    forward$ = fromPromise(\n      new Promise((resolve) => {\n        // @ts-ignore\n        pendingRequests.push(() => resolve())\n      }),\n    )\n  }\n\n  // @ts-ignore\n  return forward$.flatMap(() => {\n    return forward(operation)\n  })\n}\n\nconst authLink = setContext((_, { headers }) => {\n  // get the authentication token from local storage if it exists\n  const token = localStorage.getItem('user.token')\n  // return the headers to the context so httpLink can read them\n  return {\n    headers: {\n      ...headers,\n      authorization: token ? `Bearer ${token}` : '',\n    },\n  }\n})\n\nconst httpLink = createHttpLink({\n  uri: `${process.env.REACT_APP_HOST}/graphql`,\n  //uri: 'http://protectql.com/graphql',\n})\n\n// @ts-ignore\nconst erroLink = onError(({ graphQLErrors, networkError, operation, forward }) => {\n  if (graphQLErrors && graphQLErrors.some((error) => (error as any).tokenExpired)) {\n    return unautheniticatedAction(forward, operation)\n  }\n\n  if (graphQLErrors) graphQLErrors.map(({ message, locations, path }) => console.log(`[GraphQL error]: Message: ${message}, Location: ${locations}, Path: ${path}`))\n\n  if (networkError) console.log(`[Network error]: ${networkError}`)\n})\n\nexport const apolloClient = new ApolloClient({\n  link: ApolloLink.from([retryLink, erroLink, authLink, httpLink]),\n  cache: new InMemoryCache(),\n  defaultOptions: {\n    watchQuery: {\n      errorPolicy: 'none',\n    },\n    query: {\n      errorPolicy: 'none',\n    },\n    mutate: {\n      errorPolicy: 'all',\n    },\n  },\n})\n\nexport default apolloClient\n","import React, { useState, useEffect } from 'react'\nimport FilteredList from '../../components/List1/FilteredList'\nimport gql from 'graphql-tag'\n\nconst USER_LIST_QUERY = gql`\n  query allUser($filter: UserFilter) {\n    allUsers(filter: $filter) {\n      id\n      name\n      models\n    }\n  }\n`\n\nconst ADMIN_LIST_QUERY = gql`\n  query allUserRole($filter: UserRoleFilter) {\n    allUserRole(filter: $filter) {\n      id\n      name\n    }\n  }\n`\n\nconst DELETE_MUTATION = gql`\n  mutation deleteUserRole($id: ID!) {\n    deleteUserRole(id: $id) {\n      id\n    }\n  }\n`\n\nexport const UserRoleList: React.FC<{ userId?: string; adminMode?: boolean }> = ({ userId, adminMode = false }) => {\n  return (\n    <div>\n      <FilteredList name={'Roles'} fields={['role']} userId={userId} adminMode={adminMode} queries={{ USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION }} />\n    </div>\n  )\n}\n\nexport default UserRoleList\n","import React, { useState, useEffect, useCallback } from \"react\";\nimport * as _ from 'lodash'\nimport gql from \"graphql-tag\";\n\nimport BaseEdit from \"../../components/EditorEx/Edit\"\n\n\nconst CREATE_MUTATION = gql`\n  mutation createUserRole($role: String!) {\n    createUserRole(role: $role) {\n      id\n      role\n    }\n  }\n`;\n\nconst UPDATE_MUTATION = gql`\n  mutation updateUserRole($id:ID!, $role: String!) {\n    updateUserRole(id: $id, role: $role) {\n      id\n      role\n    }\n  }\n`;\n\nconst QUERY = gql`\n  query userRole($id:ID){ UserRole(id:$id) {\n      id,\n      role,\n    }}\n`;\n\nexport const UserRoleEdit = (data:any) => {\n  const id = _.get(data, 'match.params.id')\n  \n\n  return (\n    <>\n      <BaseEdit \n        id={id} \n        name={'UserRole'}\n        fields={['role']}\n        query={{\n            CREATE_MUTATION,\n            UPDATE_MUTATION,\n            QUERY\n        }}\n      />\n    </>\n  );\n};\n\nexport default UserRoleEdit","import _ from 'lodash'\nimport React from 'react'\nimport { Provider, useSelector } from 'react-redux'\nimport { Playground, store, getSettings, setSettingsString } from 'graphql-playground-react'\nimport { selectUser } from '../../app/reducers/userSlice'\n\nexport const GQLPlayground: React.FC<{ data: any }> = (data: any) => {\n  const userState = useSelector(selectUser) || { id: null, token: null }\n  const projectId = _.get(data, 'match.params.projectId')\n  const endpoint = `${process.env.REACT_APP_HOST}/client/${userState.id}/project/${projectId}/graphql`\n  // const endpoint = `${process.env.REACT_APP_HOST}/graphql`\n\n  // NOTE: for some reason pass setting over `setting` properties doesn't work\n  //       so it is taken this workeround\n  // https://github.com/graphql/graphql-playground/issues/1037#issuecomment-559224565\n  // grab the redux store\n  const state = store.getState()\n  // get the current settings\n  const settings = getSettings(state)\n  settings['editor.theme'] = 'light'\n  settings['schema.polling.enable'] = false\n  settings['request.globalHeaders'] = {\n    // hot reload\n    Authorization: `Bearer ${localStorage.getItem('user.token')}`,\n    XUser: `${userState.id}`,\n    XProject: `${projectId}`,\n\n    // proxy mode works on authorization\n    // 'Authorization': `Bearer ${userState.token}`,\n  }\n\n  store.dispatch(setSettingsString(JSON.stringify(settings, null, 2)))\n  return (\n    <Provider store={store}>\n      <Playground endpoint={endpoint} workspaceName={projectId} platformToken={'ahojk8999333'} />\n    </Provider>\n  )\n}\n\nexport default GQLPlayground\n","import React from 'react'\nimport Typed from 'react-typed'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom';\n\nexport const Home = () => {\n\n    return (\n        <div className=\"no-bottom no-top\" id=\"content\">\n            <section className=\"full-height vertical-center\">\n                <div className=\"container\">\n                    <div className=\"row align-items-center\">\n                        <div className=\"col-lg-5\" data-wow-delay=\".5s\">\n                            <div className=\"ready-to-launch\">Ready to launch\n                                <div>\n                                    your&nbsp;\n                                    <Typed className=\"typed id-color\"\n                                        // typedRef={(typed) => { this.typed = typed; }}\n                                        strings={[\n                                            'backend',\n                                            'service',\n                                            'application']}\n                                        typeSpeed={70}\n                                        backSpeed={54}\n                                        startDelay={2000}\n\n                                        loop\n                                    />\n                                </div>\n                            </div>\n\n                            <p className=\"p-lead\">Instant protected Graphql service, with models designed by you. You can connect with React.js, Vue.js or Angular.js app and create application right now</p>\n                            <Link className=\"btn btn-primary btn-round\" to=\"/register\">Try it for free</Link>&nbsp;&nbsp;\n                            <Link className=\"btn btn-round\" to=\"/register\">How it is works?</Link>\n                            <div className=\"mb-sm-30\"></div>\n                        </div>\n\n                        <div className=\"col-lg-6 offset-lg-1\" data-wow-delay=\".5s\">\n                            <img src=\"3.png\" className=\"img-fluid\" alt=\"\" />\n                        </div>\n                    </div>\n                </div>\n            </section>\n\n            <section className=\"full-height vertical-center\">\n            </section>\n        </div>\n\n    );\n}\n\nexport default Home","\n\nexport const isEmailValid = (email: string) => {\n    if(process.env.NODE_ENV === 'development') return true\n\n    return new RegExp(/[a-z0-9._%+-]+@[a-z0-9.-]+\\.[a-z]{2,15}/g).test(email)\n}\n\nexport const isPasswordValid = (password: string) => {\n    //if(process.env.NODE_ENV === 'development') return true\n\n    const regularExpression = /^(?=.*[0-9])(?=.*[!@#$%^&*])[a-zA-Z0-9!@#$%^&*]{6,16}$/\n    return regularExpression.test(password)\n}\n\nexport interface IPasswordStrongResult {\n    valid: boolean\n    strong: number\n    name: string\n    variant: string\n}\nexport const passwordStrong = (password: string):IPasswordStrongResult => {\n    const length = password.length\n\n    if(length < 1){\n        return {\n           valid: false,\n           strong: 0,\n           name: '',\n           variant: 'danger'  \n        } as IPasswordStrongResult\n    }\n\n    if(length >= 15){\n        return {\n            valid: true,\n            strong: 100,\n            name: 'strong',\n            variant: 'success' \n         } as IPasswordStrongResult\n    }\n\n    const capital = /(?=.*[A-Z]){2,}/.test(password) ? 2 : ( /(?=.*[A-Z])/.test(password) ? 1 : 0)\n    const lower = /(?=.*[a-z]){2,}/.test(password) ? 2 : ( /(?=.*[a-z])/.test(password) ? 1 : 0)\n    const number = /(?=.*[0-9]){2,}/.test(password) ? 2 : ( /(?=.*[0-9])/.test(password) ? 1 : 0)\n    const special = /(?=.*[!@#$%^&*]){2,}/.test(password) ? 2 : ( /(?=.*[!@#$%^&*])/.test(password) ? 1 : 0)\n    \n    const value = capital + lower + number + special\n\n    const valid = (length > 7 && lower > 0 && number > 0) || process.env.NODE_ENV === 'development'\n    let percentage = (value+(length/4))\n    if(percentage > 10) percentage = 10\n\n    return {\n        valid,\n        strong: percentage * 10,\n        name: value > 6 ? 'strong' : (value > 4 ? 'intermediate' : (valid ? 'weak' : 'poor')),\n        variant: percentage > 6 ? 'success' : (valid ? 'warning' : 'danger'),\n    } as IPasswordStrongResult\n    \n}","import React from 'react'\nimport { Form, ProgressBar } from 'react-bootstrap'\nimport { IPasswordStrongResult } from '../../app/utils'\n\nexport interface IPasswordComponent {\n  strongPassword: IPasswordStrongResult\n  password: string\n  onPasswordChange: (arg: any) => void\n}\n\nexport const PasswordComponent: React.FC<IPasswordComponent> = ({ onPasswordChange, password, strongPassword }) => (\n  <Form.Group controlId=\"formBasicPassword\">\n    <Form.Label>Password</Form.Label>\n    <Form.Control type=\"password\" placeholder=\"Password\" onChange={onPasswordChange} value={password} isInvalid={!strongPassword.valid} />\n    <Form.Text>Make sure it's at least 15 characters OR at least 8 characters including a number and a lowercase letter</Form.Text>\n    <ProgressBar now={strongPassword.strong} label={strongPassword.name} variant={strongPassword.variant} />\n  </Form.Group>\n)\n\nexport default PasswordComponent\n","import { TypedUseSelectorHook, useDispatch, useSelector } from 'react-redux';\nimport type { RootState, AppDispatch } from './store';\n\n// Use throughout your app instead of plain `useDispatch` and `useSelector`\nexport const useAppDispatch = () => useDispatch<AppDispatch>();\nexport const useAppSelector: TypedUseSelectorHook<RootState> = useSelector;\n","import React, { useState } from 'react'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/client'\nimport { Modal, Form, Alert, Button, ProgressBar } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { isEmailValid, passwordStrong } from '../../app/utils'\nimport PasswordComponent from './PasswordComponent'\nimport { useAppDispatch } from '../../app/hooks'\nimport { login, UserToken } from '../../app/reducers/userSlice'\n\nconst REGISTER_MUTATION = gql`\n  mutation register($email: String!, $pass: String!) {\n    register_v1(email: $email, password: $pass) {\n      refreshToken\n      token\n      user {\n        roles {\n          name\n        }\n        id\n        email\n        verified\n      }\n    }\n  }\n`\n\nexport const Register: React.FC = () => {\n  const [email, setEmail] = useState('')\n  const [pass, setPass] = useState('')\n  const [copy, setCopy] = useState('')\n\n  const history = useHistory()\n  const dispatch = useAppDispatch()\n\n  const [registerMutation, { loading, data, error }] = useMutation(REGISTER_MUTATION, {\n    errorPolicy: 'none',\n  })\n\n  const [invalidEmail, setInvalidEmail] = useState(false)\n  const [emailProbablyTaken, setEmailProbablyTaken] = useState(false)\n  const [strong, setStrong] = useState(passwordStrong(''))\n\n  const [invalidCopy, setInvalidCopy] = useState(false)\n\n  const onRegister = async () => {\n    if (!isEmailValid(email)) {\n      return setInvalidEmail(true)\n    }\n\n    if (pass !== copy) {\n      setInvalidCopy(true)\n      return\n    }\n\n    try {\n      const { data } = await registerMutation({ variables: { email, pass } })\n      const userToken = data.register_v1 as UserToken\n      dispatch(login(userToken))\n      history.push('/user/projects')\n    } catch (ex) {\n      console.log('onError', data)\n      setEmailProbablyTaken(true)\n    }\n  }\n\n  const onEmailChange = (event: any) => {\n    setEmail(event.target.value)\n    setInvalidEmail(false)\n    setEmailProbablyTaken(false)\n  }\n\n  const onPasswordChange = (event: any) => {\n    const pass = event.target.value as string\n\n    setPass(pass)\n    setInvalidEmail(false)\n    setStrong(passwordStrong(pass))\n  }\n\n  const onCopyChange = (event: any) => {\n    const c = event.target.value\n    setCopy(c)\n    setInvalidEmail(false)\n\n    if (c == pass) {\n      setInvalidCopy(false)\n    }\n  }\n\n  return (\n    <>\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 offset-md-2\">\n                <form action=\"blank.php\" className=\"row\" id=\"form_subscribe\" method=\"post\" name=\"myForm\">\n                  <div className=\"col-md-12 text-center\">\n                    <h1>User Registration</h1>\n                    <p>All big things starting here</p>\n                  </div>\n                  <div className=\"clearfix\"></div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n              <form name=\"contactForm\" id=\"contact_form\" className=\"form-border\" method=\"post\" action=\"blank.php\">\n                <Form>\n                  {invalidEmail && <Alert variant={'danger'}>Email is not in good shape...</Alert>}\n                  {emailProbablyTaken && (\n                    <Alert variant={'danger'}>\n                      Email is probably taken, did you <Link to=\"/forgotten-password\">forgotten password</Link>?\n                    </Alert>\n                  )}\n                  {invalidCopy && <Alert variant={'danger'}>The retyped password is not the same</Alert>}\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\n                    <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n                  </Form.Group>\n\n                  <PasswordComponent password={pass} onPasswordChange={onPasswordChange} strongPassword={strong} />\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Re-Password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Retype Password\" onChange={onCopyChange} value={copy} isInvalid={invalidCopy} />\n                  </Form.Group>\n                </Form>\n\n                <div id=\"submit\" className=\"pull-left\">\n                  {!loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRegister()}>\n                      Register\n                    </Button>\n                  )}\n                  {loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" disabled>\n                      Loading...\n                    </Button>\n                  )}\n\n                  <div className=\"clearfix\"></div>\n\n                  <div className=\"spacer-single\"></div>\n\n                  {/* <ul className=\"list s3\">\n                  <li>Or login with:</li>\n                  <li><a href=\"#\">Facebook</a></li>\n                  <li><a href=\"#\">Google</a></li>\n                  <li><a href=\"#\">Instagram</a></li>\n                </ul> */}\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Register\n","import { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport React, { useState } from 'react'\nimport { Alert, Button, Form } from 'react-bootstrap'\nimport { Link, useHistory } from 'react-router-dom'\nimport { useAppDispatch } from '../../app/hooks'\nimport { login, UserToken } from '../../app/reducers/userSlice'\nimport { isEmailValid } from '../../app/utils'\n\nconst LOGIN_QL = gql`\n  mutation Login($email: String!, $pass: String!) {\n    login_v1(email: $email, password: $pass) {\n      token\n      refreshToken\n      user {\n        id\n        email\n        verified\n        roles {\n          name\n        }\n      }\n    }\n  }\n`\n\nexport const Login: React.FC = () => {\n  const [email, setEmail] = useState(localStorage.getItem('user.email') as string)\n  const [pass, setPass] = useState('')\n\n  const [invalidEmail, setInvalidEmail] = useState(false)\n  const [invalidPass, setInvalidPass] = useState(false)\n\n  const history = useHistory()\n  const dispatch = useAppDispatch()\n\n  const [loginMutation, { loading, data, error }] = useMutation(LOGIN_QL, { errorPolicy: 'none' })\n\n  const onLogin = async () => {\n    if (!isEmailValid(email)) {\n      return setInvalidEmail(true)\n    }\n\n    try {\n      const { data }: any = await loginMutation({ variables: { email, pass } })\n      const userToken = data.login_v1 as UserToken\n\n      dispatch(login(userToken))\n      history.push('/user/projects')\n    } catch (e) {\n      setInvalidEmail(true)\n      setInvalidPass(true)\n      setPass('')\n    }\n  }\n\n  const onEmailChange = (event: any) => {\n    setEmail(event.target.value)\n    setInvalidEmail(false)\n    setInvalidPass(false)\n  }\n\n  const onPasswordChange = (event: any) => {\n    setPass(event.target.value)\n    setInvalidEmail(false)\n    setInvalidPass(false)\n  }\n\n  return (\n    <>\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 offset-md-2\">\n                <form action=\"blank.php\" className=\"row\" id=\"form_subscribe\" method=\"post\" name=\"myForm\">\n                  <div className=\"col-md-12 text-center\">\n                    <h1>User Login</h1>\n                    <p>We was missed you already</p>\n                  </div>\n                  <div className=\"clearfix\"></div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n              <Form name=\"contactForm\" id=\"contact_form\" className=\"form-border\">\n                {!invalidPass && <h3>Login to your account</h3>}\n                {invalidPass && (\n                  <Alert variant={'danger'}>\n                    Email or password is not valid. Did You <Link to=\"/forgotten-password\">forgotten your password</Link>?\n                  </Alert>\n                )}\n                {invalidEmail && <Alert variant={'danger'}>Email is not in good shape...</Alert>}\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n                  <Form.Control type=\"text\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Password</Form.Label>\n                  <Form.Control type=\"password\" onChange={onPasswordChange} value={pass} isInvalid={invalidPass} />\n                  <Form.Text className=\"text-muted\">We'll never share your password with anyone else.</Form.Text>\n                </Form.Group>\n\n                <div id=\"submit\" className=\"pull-left\">\n                  {!loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" onClick={() => onLogin()}>\n                      Login\n                    </Button>\n                  )}\n                  {loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" disabled>\n                      Loading...\n                    </Button>\n                  )}\n                  <div className=\"clearfix\"></div>\n\n                  <div className=\"spacer-single\"></div>\n\n                  <ul className=\"list s3\">\n                    <li>Or login with:</li>\n                    <li>\n                      <a href={`${process.env.REACT_APP_HOST}/auth/github`}>GitHub</a>\n                    </li>\n                    <li>\n                      <a href={`${process.env.REACT_APP_HOST}/auth/facebook`}>Facebook</a>\n                    </li>\n                    <li>\n                      <a href={`${process.env.REACT_APP_HOST}/auth/google`}>Google</a>\n                    </li>\n                  </ul>\n                </div>\n              </Form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default Login\n","import React from 'react'\nimport { Link } from 'react-router-dom'\n\nexport const PricingPage: React.FC = () => (\n  <>\n    <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 offset-md-2\">\n              <form action=\"blank.php\" className=\"row\" id=\"form_subscribe\" method=\"post\" name=\"myForm\">\n                <div className=\"col-md-12 text-center\">\n                  <h1>Pricing</h1>\n                  <p>Ready to rock?</p>\n                </div>\n                <div className=\"clearfix\"></div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n\n    <section className=\"no-top pricing\">\n      <div className=\"row text-center align-items-end\">\n        <div className=\"col-lg-4 mb-5 mb-lg-0\">\n          <div className=\"bg-white p-5 rounded-lg shadow\">\n            <h1 className=\"h6 text-uppercase font-weight-bold mb-4\">Basic</h1>\n            <h2 className=\"h1 font-weight-bold\">\n              $0<span className=\"text-small font-weight-normal ml-2\">/ month</span>\n            </h2>\n            <div className=\"custom-separator my-4 mx-auto bg-primary\"></div>\n            up to 3 basic projects\n            <ul className=\"list-unstyled my-5 text-small text-left\">\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> Advanced user auth with Login, Register, ...\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> up to 1000 request / hour\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> up to 10MB database space\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> up to 10MB disk space\n              </li>\n              <li className=\"mb-3 text-muted\">\n                <i className=\"fa fa-times mr-2\"></i>\n                <del>User Email verification</del>\n              </li>\n              <li className=\"mb-3 text-muted\">\n                <i className=\"fa fa-times mr-2\"></i>\n                <del>3th party login (Facebook, Google, ...)</del>\n              </li>\n              <li className=\"mb-3 text-muted\">\n                <i className=\"fa fa-times mr-2\"></i>\n                <del>Hooks with own code</del>\n              </li>\n              <li className=\"mb-3 text-muted\">\n                <i className=\"fa fa-times mr-2\"></i>\n                <del>Control of environment variables</del>\n              </li>\n            </ul>\n            <Link to=\"register\" className=\"btn btn-primary btn-block p-2 shadow rounded-pill\">\n              Try it now\n            </Link>\n          </div>\n        </div>\n        <div className=\"col-lg-4 mb-5 mb-lg-0\">\n          <div className=\"bg-white p-5 rounded-lg shadow\">\n            <h1 className=\"h6 text-uppercase font-weight-bold mb-4\">Pro</h1>\n            <h2 className=\"h1 font-weight-bold\">\n              $19.99<span className=\"text-small font-weight-normal ml-2\">/ month</span>\n            </h2>\n            <div className=\"custom-separator my-4 mx-auto bg-primary\"></div>plus one basic and one Pro project\n            <ul className=\"list-unstyled my-5 text-small text-left font-weight-normal\">\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> Advanced user auth with Login, Register, ...\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> up to 10000 request / hour\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> starts with 100MB database space\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> starts with 100MB disk space\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> User Email verification\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> 3th party login (Facebook, Google, ...)\n              </li>\n              <li className=\"mb-3 text-muted\">\n                <i className=\"fa fa-times mr-2\"></i>\n                <del> Hooks with own code</del>\n              </li>\n              <li className=\"mb-3 text-muted\">\n                <i className=\"fa fa-times mr-2\"></i>\n                <del>Control of environment variables</del>\n              </li>\n            </ul>\n            <Link to=\"subscribe\" className=\"btn btn-primary btn-block p-2 shadow rounded-pill\">\n              Subscribe\n            </Link>\n          </div>\n        </div>\n        <div className=\"col-lg-4\">\n          <div className=\"bg-white p-5 rounded-lg shadow\">\n            <h1 className=\"h6 text-uppercase font-weight-bold mb-4\">Dedicated</h1>\n            <h2 className=\"h1 font-weight-bold\">\n              $199.99<span className=\"text-small font-weight-normal ml-2\">/ month</span>\n            </h2>\n            <div className=\"custom-separator my-4 mx-auto bg-primary\"></div>\n            plus one dedicated server\n            <ul className=\"list-unstyled my-5 text-small text-left font-weight-normal\">\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> Advanced user auth with Login, Register, ...\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> not limited requests\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> own database space\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> own disk space\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> User Email verification\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> 3th party login (Facebook, Google, ...)\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> Hooks with own code\n              </li>\n              <li className=\"mb-3\">\n                <i className=\"fa fa-check mr-2 text-primary\"></i> Control of environment variables\n              </li>\n            </ul>\n            <Link to=\"subscribe\" className=\"btn btn-primary btn-block p-2 shadow rounded-pill\">\n              Subscribe\n            </Link>\n          </div>\n        </div>\n      </div>\n    </section>\n  </>\n)\n\nexport default PricingPage\n","import { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport React, { useState } from 'react'\nimport { Button, Form } from 'react-bootstrap'\nimport Recaptcha from 'react-recaptcha'\n\nconst SUBSCRIBE_MUTATION_QL = gql`\n  mutation subsribe($email: String!, $message: String!) {\n    createSubscribe(email: $email, message: $message) {\n      id\n    }\n  }\n`\nexport const SubscribePage: React.FC = () => {\n  const [email, setEmail] = useState('')\n  const [message, setPass] = useState('')\n\n  const [invalidEmail, setInvalidEmail] = useState(false)\n  const [invalidPass, setInvalidPass] = useState(false)\n  const [verified, setVerify] = useState(false)\n\n  const [subsribed, setSubsribed] = useState(false)\n\n  const [subsribe, { loading, data, error }] = useMutation(SUBSCRIBE_MUTATION_QL, {\n    errorPolicy: 'none',\n    onCompleted: (data) => {\n      console.log('e,c', data)\n      setSubsribed(true)\n    },\n    onError: () => {\n      console.log('onError', data)\n      setInvalidEmail(true)\n    },\n  })\n\n  const onSubsribe = async () => {\n    subsribe({ variables: { email, message } })\n  }\n\n  const onEmailChange = (event: any) => {\n    const email = event.target.value as string\n    const validEmail = !/^([A-Za-z0-9_\\-.])+@([A-Za-z0-9_\\-.])+\\.([A-Za-z]{2,})$/.test(email)\n\n    setEmail(email)\n    setInvalidEmail(validEmail)\n    setInvalidPass(false)\n  }\n\n  const onTextChange = (event: any) => {\n    setPass(event.target.value)\n    setInvalidEmail(false)\n    setInvalidPass(false)\n  }\n\n  const onHide = () => {\n    setPass('')\n    setInvalidEmail(false)\n    setInvalidPass(false)\n    // doHide()\n  }\n\n  return (\n    <>\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 offset-md-2\">\n                <form action=\"blank.php\" className=\"row\" id=\"form_subscribe\" method=\"post\" name=\"myForm\">\n                  <div className=\"col-md-12 text-center\">\n                    <h1>Subscribe</h1>\n                    <p>We are almost done</p>\n                  </div>\n                  <div className=\"clearfix\"></div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n              <Form name=\"contactForm\" id=\"contact_form\" className=\"form-border\">\n                <h3>We working very hard on new features</h3>\n                <p className=\"p-lead\">\n                  Even we believe we are very close to bring them to a life But we want to be sure our product will met our costumers satisfaction. So we decided to push\n                  back a little bit and take time for reimlplement some features to improve them. Even we work very hard they are still not completed yet. Please let us\n                  know if You want to be part of our early-adopters-program to be one of first humans to use them\n                </p>\n                <Form.Group controlId=\"formBasicEmail\">\n                  <Form.Label>Email address</Form.Label>\n\n                  <Form.Control type=\"text\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\n                  <Form.Control.Feedback type=\"invalid\">The email is very probably incorect</Form.Control.Feedback>\n                </Form.Group>\n\n                <Form.Group controlId=\"formBasicPassword\">\n                  <Form.Label>Do you tell us what features you need a most?</Form.Label>\n                  <Form.Control as=\"textarea\" rows={10} onChange={onTextChange} value={message} isInvalid={invalidPass} />\n                </Form.Group>\n\n                {!subsribed && (\n                  <div id=\"submit\" className=\"pull-left\">\n                    {/* disabled={!verified || invalidEmail} */}\n                    {!loading && (\n                      <Button className=\"btn-round\" variant=\"primary\" onClick={() => onSubsribe()} disabled={!verified || invalidEmail}>\n                        Send to us\n                      </Button>\n                    )}\n                    {loading && (\n                      <Button className=\"btn-round\" variant=\"primary\" disabled>\n                        Sending...\n                      </Button>\n                    )}\n                    <div className=\"clearfix\"></div>\n                  </div>\n                )}\n\n                {!subsribed && (\n                  <div>\n                    <Recaptcha\n                      sitekey={'6LeirhoaAAAAADIzp_mcmG0ly-DQSBB5ScfXi3jh'}\n                      verifyCallback={(v) => {\n                        console.log('verifyCallback', v)\n                        setTimeout(() => setVerify(true), 300)\n                      }}\n                    />\n                  </div>\n                )}\n                {subsribed && <div>Sent: Thank You we will reach you very soon with our new features</div>}\n              </Form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default SubscribePage\n","import React from 'react'\nimport Typed from 'react-typed'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom'\n\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\n\nimport markdown from './markdowns/SchemaDescription'\nimport './Documentation.scss'\n\nexport const DocumentationSchemaDescription = () => {\n    return (\n        <div className=\"container\">\n            <div className=\"my-documentation\">\n                <ReactMarkdown plugins={[gfm]} children={markdown} allowDangerousHtml={true} />\n            </div>\n        </div>\n    )\n}\n\nexport default DocumentationSchemaDescription","export default `\n# Schema Description\n\n1. [Model](#model)\n1. [Entity](#entity)\n1. [Fields](#fields)\n1. [Relations](#relations)\n1. [Model Permissions](#model-permissions)\n\n# Model\n\nTypes are similar of types in graphql [https://graphql.org/learn/schema/](https://graphql.org/learn/schema/). Model should start with capital letter like \"**Todo**\" and should have taged with reserved word **@model**\n\n\\`\\`\\`\ntype Todo @model {\n    name: String!\n    done: Boolean!\n}\n\\`\\`\\`\n\n**Todo** is a GraphQL Object Type, meaning it's a type with some fields. For ProtectQL meaning is a model.\n**name** and **done** are fields on the Character type. That means that name and done are the only fields that can appear in any part of a GraphQL query that operates on the Todo model/type.\n\n**String** is one of the built-in scalar types - these are types that resolve to a single scalar object, and can't have sub-selections in the query. We'll go over scalar types more later.\n\n**String!** means that the field is non-nullable, meaning that the GraphQL service promises to always give you a value when you query this field. In the type language, we'll represent those with an exclamation mark.\n\n## Default Models\n\n### User\n\nModel User is predefined and contain some main fields what is not possible change or rename \\`email\\`, \\`password\\`, \\`verified\\`, \\`roles\\`. Whole model looks like:\n\n\\`\\`\\`\ntype User @model {\n    email: String! @isReadonly\n    password: String! @isReadonly\n    verified: Boolean @isReadonly\n    roles: [@relation(\"RoleOnUser\")]\n}\n\\`\\`\\`\n\nBut you can extend these fields by defining new ones\n\n\\`\\`\\`\ntype User @model {\n    firstName: String\n    lastName: String\n    # the other fields like email, password, verified and roles\n    # are not present in model definition but fully accessible by GraphQL query\n}\n\\`\\`\\`\n\n### UserRole\n\nThis model you can't modify or extend, but is look like this\n\n\\`\\`\\`\ntype UserRole @model {\n  name: String @isUnique\n  users: [@relation(\"RoleOnUser\")]\n}\n\\`\\`\\`\n\n# Entity\n\nEntity should start with capital letter like \"**Todo**\" and should have taged with reserved word **@entity**. Entity doesn't have a id, so is not possible create, update or list it from graphql. Entity have to be part of object. Also can't have a relation to another model. Lets have \\`Address\\`\n\n\\`\\`\\`\ntype Address @entity {\n    name: String!\n    street: String!\n    city: String!\n}\n\\`\\`\\`\n\nnow we can map entity to Todo\n\n\\`\\`\\`\ntype Invoice @model {\n    customer: Address\n    seller: Address\n    totalPrice: Float\n}\n\\`\\`\\`\n\nor even we can map entity as array\n\n\\`\\`\\`\ntype InvoiceItem @entity {\n    name: String!\n    count: Int!\n    price: float!\n}\n\ntype Invoice @model {\n    items: [InvoiceItem]\n    customer: Address\n    seller: Address\n    totalPrice: Float\n}\n\\`\\`\\`\n\nShare one entity accross multiple models is also not problem\n\n# Fields\n\n## Defining own fields\n\nEach model have members. Member have two parts \\`name\\` and \\`scalar type\\`. Name should start with regular character like a-z or cappital A-Z\n\n\\`\\`\\`\nfield: String # possible\nField: String # possible\nfield123: String # possible\nfield_123: String # possible\n\n123field: String # not possible\n_field: String # not possible\n\nemit1: String # possible\nemit: String # not possible is reserved\n\\`\\`\\`\n\n### Field reserved names\n\n-   id\n-   on\n-   emit\n-   \\_events\n-   db\n-   get\n-   set\n-   init\n-   isNew\n-   errors\n-   schema\n-   options\n-   modelName\n-   collection\n-   \\_pres\n-   \\_posts\n-   toObject\n\n## Field scalar types\n\n| Syntax  | Description                                                                                                                                                                                                                                                |\n| ------- | ---------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------- |\n| **ID**  | The ID scalar type represents a unique identifier, often used to refetch an object or as the key for a cache. The ID type is serialized in the same way as a String; however, defining it as an ID signifies that it is not intended to be human‐readable. |\n| String  | A UTF‐8 character sequence                                                                                                                                                                                                                                 |\n| Boolean | **true** or **false**.                                                                                                                                                                                                                                     |\n| Int     | A signed 32‐bit integer                                                                                                                                                                                                                                    |\n| Float   | A signed double-precision floating-point value                                                                                                                                                                                                             |\n| Date    | objects represent a single moment in time in a platform-independent format.                                                                                                                                                                                |\n\n## Arrays\n\nEach field can be described as array\n\n\\`\\`\\`\nfield1: [String] # this field is array of strings\nfield2: [Int] # this field is array of numbers\nfield3: [Boolean] # this field is array of boolens\nfield4: [Date] # this field is array of dates\n\\`\\`\\`\n\n## Field modificators\n\n| Syntax      | Description                                                                  |\n| ----------- | ---------------------------------------------------------------------------- |\n| !           | mark field as mandatory (default is optional)                                |\n| @isReadonly | Object can be set only when is created                                       |\n| @isUnique   | Field is unique                                                              |\n| @relation   | A special type descriptive the object is actualy relations to another object |\n| @default    | describe default field value                                                 |\n| @virtual    | field marked as virtual is not in database                                   |\n| @regExp     | field is conditional by regexpresion                                         |\n\n### Examples\n\n\\`\\`\\`\nfield1: String                         # this field is optional for creation and posible change in edit\nfield2: String!                        # this field is mandatory for creation and posible change in edit\nfield3: String @isReadonly             # this field is posible setup in creation but not posible change in edit\nfield4: String! @isReadonly            # this field you need setup in creation but not posible change in edit\nfield5: String @isUnique               # this field is unique\nfield6: String @isUnique               # this field is mandatory and unique\nfield7: String @isUnique @isReadonly   # this field is optional, unique and readolny\nfield8: String! @isUnique @isReadonly  # this field is mandatory, unique and readonly\nfield9: String @default(\"hello\")       # this field is optional, but the default value will be \"hello\"\n\\`\\`\\`\n\n### Unique can be combination of multiple fields\n\nIs unique modificator can have parameter to specify fields combination. For example if you want unique field value for one user, but another user can also have same value but just once\n\n\\`\\`\\`\ntype Todo @model {\n name: String! @isUnique(combinationWith:\"user\")\n user: User @relation(name: \"TodoOnUser\")\n}\n\n\\`\\`\\`\n\n# Relations\n\nEach model can be connected to another model with following relations\n\n-   one to one\n-   many to one\n-   one to many\n-   many to many\n\n## modificator\n\n\\`\\`\\`\nfield: @releation(name: \"relation-name\")\n\\`\\`\\`\n\nFirst the releation field have to be a same type as connected object. Also must be mark with @relation modificator. Relation modificator have parameter name what describe unique key to recognize connection on booth sides.\n\n## one to one - example\n\nOne user will have one Todo\n\n\\`\\`\\`\ntype Todo @model {\n user: @relation(name: \"TodoOnUser\")\n}\n\ntype User @model {\n todo: @relation(name: \"TodoOnUser\")\n}\n\\`\\`\\`\n\n## one to many - example\n\nOne user will have multiple Todos\n\n\\`\\`\\`\ntype Todo @model {\n user: @relation(name: \"TodoOnUser\")\n}\n\ntype User @model {\n todo: [@relation(name: \"TodoOnUser\")]\n}\n\\`\\`\\`\n\n## many to many - example\n\nOne Users can have multiple Todos what can be related to multiple Users\n\n\\`\\`\\`\ntype Todo @model {\n user: [@relation(name: \"TodoOnUser\")]\n}\n\ntype User @model {\n todo: [@relation(name: \"TodoOnUser\")]\n}\n\\`\\`\\`\n\n## More relation to different object - example\n\n\\`\\`\\`\ntype Todo @model {\n user: @relation(name: \"TodoOnUser\")\n}\n\ntype Project @model {\n user: @relation(name: \"ProjectOnUser\")\n}\n\ntype User @model {\n todo: [@relation(name: \"TodoOnUser\")]\n project: [@relation(name: \"ProjectOnUser\")]\n}\n\\`\\`\\`\n\n## Required relations\n\nRelatations can be required, but not array relations. Array relations will be automaticaly set as not required\n\n### Required relations example\n\nHere is a example Todo what have required relation to User model, in this case you can't create a Todo without a user\n\n\\`\\`\\`\ntype Todo @model {\n user: @relation(name: \"TodoOnUser\")!\n}\n\ntype User @model {\n todo: [@relation(name: \"TodoOnUser\")]\n}\n\\`\\`\\`\n\nIn another way this relation with required list of user are not possible and will automaticaly set to \\`user: [@relation(name: \"TodoOnUser\")]\\` (not required list of User)\n\n\\`\\`\\`\ntype Todo @model {\n user: [@relation(name: \"TodoOnUser\")]!\n}\n\ntype User @model {\n todo: [@relation(name: \"TodoOnUser\")]\n}\n\\`\\`\\`\n\n# Model Permissions\n\nEcha model can have described his own permissions for each operation\n\n| Action  | Description                              |\n| ------- | ---------------------------------------- |\n| @one    | permission about read one model by ID    |\n| @all    | permission about read all models         |\n| @create | permission about create a model          |\n| @update | permission about update a existing model |\n| @delete | permission about delete a existing model |\n\n| Tag values | Description                             |\n| ---------- | --------------------------------------- |\n| public     | anybody can do the action               |\n| user       | any loged user can do the action        |\n| owner      | only owner of a model                   |\n| role       | only user who is sign to a role (group) |\n| filter     | only if the filter are aplied           |\n\nLets take a look on our first model Todo\n\n\\`\\`\\`\n# @create(role:\"admin\") - these are default invisible setting\n# @one(role:\"admin\") @update(role:\"admin\") @remove(role:\"admin\") - these are default invisible setting\n# @all(role:\"admin\") - these are default invisible setting\ntype Todo @model {\n    name: String!\n    done: Boolean!\n}\n\\`\\`\\`\n\nby default is every operation sign only for admin, but we can add some setting\n\n\\`\\`\\`\n@create(\"user\")\n@one(\"owner\") @update(\"owner\") @remove(\"owner\")\n@all(filter:\"user_every.id={{userId}}\")\ntype Todo @model {\n    name: String!\n    done: Boolean!\n}\n\\`\\`\\`\n\nNow the model can be created by any loged user, get one, update or delete, can only user who created this object. And last but also important see all objects is possible only with \\`user_every.id\\` filter applied thats mean, user can see only his own models.\n\nNote: admin still keeps all the roles, and can anything\n\n## Another role\n\nYou can add another role for example \\`TodosRole\\` what you can add some user who will have this priviledge, then you can add this role to permision to do some actions\n\n\\`\\`\\`\n@create(\"user\")\n@one(\"owner\") @update(\"owner\") @remove(\"owner\")\n@all(filter:\"user_every.id={{userId}}\")\n@all(role:\"TodosRole\") # we add some extra permisions for TodosRole\ntype Todo @model {\n    name: String!\n    done: Boolean!\n}\n\\`\\`\\`\n\nnow all the objects of Todo can see also a user who is sign to TodosRole\n\n`\n","import React, { useState, useEffect } from \"react\";\nimport FilteredList from \"../../components/List1/FilteredList\";\nimport gql from 'graphql-tag';\nimport { Link } from \"react-router-dom\";\n\nconst USER_LIST_QUERY = gql`\n  query allSubscribes($filter: SubscribeFilter){ allSubscribes(filter: $filter) {\n    id,\n    email,\n    message\n    }}\n`;\n\nconst ADMIN_LIST_QUERY = gql`\n  query allSubscribes($filter: SubscribeFilter){ allSubscribes(filter: $filter) {\n    id,\n    email,\n    message\n    }}\n`;\n\nconst DELETE_MUTATION = gql`\n  mutation deleteSubsribe($id: ID!) {\n    deleteSubscribe(id: $id) {\n      id\n    }\n  }\n`;\n\nconst GraphiqlLink: React.FC<{value:any, names?:any, item:any}> = ({value,names, item}) => {\n  return <Link to={`/user/projects/${item.id}/graphiql`}>playground</Link>\n}\n\nexport const SubscibesListPage: React.FC<{userId?: string, adminMode?: boolean}> = ({userId, adminMode=false}) => {\n    return (\n      <>\n \n            <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n                <div className=\"container\">\n                    <div className=\"row\">\n                        <div className=\"col-md-10 offset-md-1\">\n                                <div className=\"col-md-12 text-center\">\n                                    \n            <FilteredList \n                name={'Subsribe'}\n                fields={[\n                  'email',\n                  'message']}\n                userId={userId} \n                adminMode={adminMode}\n                queries={{USER_LIST_QUERY, ADMIN_LIST_QUERY, DELETE_MUTATION}} \n                />\n        </div>\n                  \n                                <div className=\"clearfix\"></div>\n                        </div>\n                    </div>\n                </div>\n            </div>\n       </>\n    )\n}\n\nexport default SubscibesListPage","import { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport * as _ from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Button } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useAppDispatch } from '../../app/hooks'\nimport { login, UserToken } from '../../app/reducers/userSlice'\n\nconst VERIFY_EMAIL_MUTATION = gql`\n  mutation verifyEmail($verifyToken: String!) {\n    verifyEmail_v1(verifyToken: $verifyToken) {\n      refreshToken\n      token\n      user {\n        roles {\n          name\n        }\n        id\n        email\n        verified\n      }\n    }\n  }\n`\n\nexport const VerifyUser: React.FC<any> = ({ match }) => {\n  const verifyToken = _.get(match, 'params.verifyToken')\n  const [verified, setVerified] = useState(false)\n\n  const history = useHistory()\n  const dispatch = useAppDispatch()\n\n  const [verify, { loading: verifying, data, error: verifiedError }] = useMutation(VERIFY_EMAIL_MUTATION, {\n    errorPolicy: 'none',\n  })\n\n  const doVerifyUser = async () => {\n    try {\n      const { data } = await verify({ variables: { verifyToken } })\n      // dispatch({\n      //   type: USER_LOGIN,\n      //   userToken: data.verifyEmail_v1,\n      // })\n      dispatch(login(data.verifyEmail_v1 as UserToken))\n      setVerified(true)\n      localStorage.setItem('user.verifyToken', verifyToken)\n      setTimeout(() => {\n        history.replace('/user/projects')\n      }, 2000)\n    } catch (ex) {\n      console.log('onError', data)\n    }\n  }\n\n  const onVerifyUser = () => {\n    const previouslyVerified = localStorage.getItem('user.verifyToken')\n    const userVerified = localStorage.getItem('user.verified') == 'true'\n\n    // user probably comming with the same link\n    // what was for his first verified\n    if (userVerified && previouslyVerified == verifyToken) {\n      history.replace('/user/projects')\n    } else {\n      doVerifyUser()\n    }\n  }\n\n  useEffect(() => {\n    if (verifyToken) {\n      onVerifyUser()\n    }\n  }, [verifyToken])\n\n  return (\n    <section>\n      <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-8 offset-md-2\">\n              {verified ? (\n                <div className=\"alert alert-success\" role=\"alert\">\n                  Your account was verified <Button>Start creating</Button>\n                </div>\n              ) : null}\n              {verifying ? (\n                <div className=\"alert alert-dark\" role=\"alert\">\n                  Your accont is verifing...\n                </div>\n              ) : null}\n              {!verifyToken || verifiedError ? (\n                <div className=\"alert alert-dark\" role=\"alert\">\n                  The code is invalid or already applyed\n                </div>\n              ) : null}\n            </div>\n          </div>\n        </div>\n      </div>\n    </section>\n  )\n}\n\nexport default VerifyUser\n","import React, { useState } from 'react'\nimport gql from 'graphql-tag'\nimport { useMutation } from '@apollo/client'\nimport { Modal, Form, Alert, Button } from 'react-bootstrap'\nimport { Link } from 'react-router-dom'\nimport { useHistory } from 'react-router-dom'\nimport { userInfo } from 'os'\nimport PasswordComponent from './PasswordComponent'\nimport { passwordStrong } from '../../app/utils'\nimport { useAppDispatch } from '../../app/hooks'\nimport { login, UserToken } from '../../app/reducers/userSlice'\n\nconst CHANGE_PASSWORD_MUTATION = gql`\n  mutation changePassword($userId: ID!, $oldPassword: String!, $newPassword: String!) {\n    changePassword_v1(userId: $userId, oldPassword: $oldPassword, newPassword: $newPassword) {\n      refreshToken\n      token\n      user {\n        roles {\n          name\n        }\n        id\n        email\n        verified\n      }\n    }\n  }\n`\n\nconst VERIFY_EMAIL_RESEND_MUTATION = gql`\n  mutation verifyEmailResend($userId: ID!) {\n    verifyEmailResend_v1(userId: $userId) {\n      status\n    }\n  }\n`\n\nexport const UserInfo: React.FC = () => {\n  const [oldPassword, setOldPassword] = useState('')\n  const [newPassword, setNewPassword] = useState('')\n  const [newPasswordCopy, setNewPasswordCopy] = useState('')\n  const [showPasswordChanged, setShowPasswordChanged] = useState(false)\n  const [invalidPasswordCopy, setInvalidNewPasswordCopy] = useState(false)\n\n  const [showVerifyEmailSended, setShowVerifyEmailSended] = useState(false)\n  const history = useHistory()\n\n  const [invalidOldPassword, setInvalidOldPassword] = useState(false)\n\n  const [invalidPass, setInvalidPass] = useState(false)\n  const [validPass, setValidPass] = useState(false)\n  const [strong, setStrong] = useState(passwordStrong(''))\n\n  const dispatch = useAppDispatch()\n\n  const userId = localStorage.getItem('user.id') || ''\n  const userEmail = localStorage.getItem('user.email') || ''\n  const userVerified = localStorage.getItem('user.verified') == 'true'\n\n  const [changePassword, { loading, data, error }] = useMutation(CHANGE_PASSWORD_MUTATION, {\n    errorPolicy: 'none',\n  })\n\n  const [verifyEmailResend, { loading: resendLoading, data: resend, error: resendError }] = useMutation(VERIFY_EMAIL_RESEND_MUTATION, {\n    errorPolicy: 'none',\n  })\n\n  const onVerifyEmailResend = async () => {\n    try {\n      const { data } = await verifyEmailResend({ variables: { userId } })\n      setShowVerifyEmailSended(true)\n      // show notify\n      setTimeout(() => {\n        setShowVerifyEmailSended(false)\n      }, 5000)\n    } catch (ex) {\n      console.log('onError', data)\n    }\n  }\n\n  const onChangePassword = async () => {\n    if (!strong.valid) return\n\n    if (newPassword !== newPasswordCopy) {\n      setInvalidNewPasswordCopy(true)\n      return\n    }\n\n    try {\n      const { data } = await changePassword({ variables: { userId, oldPassword, newPassword } })\n      // dispatch({\n      //   type: USER_LOGIN,\n      //   userToken: data.changePassword_v1,\n      // })\n      dispatch(login(data.changePassword_v1 as UserToken))\n      setShowPasswordChanged(true)\n\n      setOldPassword('')\n      setNewPassword('')\n      setNewPasswordCopy('')\n\n      // show notify\n      setTimeout(() => {\n        setShowPasswordChanged(false)\n      }, 5000)\n    } catch (ex) {\n      console.log('onError', data)\n      setInvalidOldPassword(true)\n    }\n  }\n\n  const onCurrentPasswordChange = (event: any) => {\n    setOldPassword(event.target.value)\n    setInvalidOldPassword(false)\n  }\n\n  const onNewPasswordChange = (event: any) => {\n    const pass = event.target.value as string\n    setStrong(passwordStrong(pass))\n\n    setNewPassword(pass)\n    setInvalidOldPassword(false)\n    setInvalidPass(false)\n\n    if (pass == newPasswordCopy) {\n      setInvalidNewPasswordCopy(false)\n    }\n  }\n\n  const onNewPasswordCopyChange = (event: any) => {\n    const c = event.target.value\n    setNewPasswordCopy(c)\n    setInvalidOldPassword(false)\n    setInvalidPass(false)\n\n    if (c == newPassword) {\n      setInvalidNewPasswordCopy(false)\n    }\n  }\n\n  return (\n    <>\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\n        <div className=\"col-md-12 text-center\">\n          <h1>User Setting</h1>\n          {showPasswordChanged ? (\n            <div className=\"alert alert-success\" role=\"alert\">\n              The password was changed\n            </div>\n          ) : null}\n          {showVerifyEmailSended ? (\n            <div className=\"alert alert-success\" role=\"alert\">\n              Email with verify link was re-send to {userEmail}\n            </div>\n          ) : null}\n        </div>\n        <div className=\"col-md-12 text-center\">\n          <h2>Email</h2>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-2 offset-md-3\">{userEmail}</div>\n            <div className=\"col-md-7 \">\n              {userVerified ? (\n                <div>Verified</div>\n              ) : (\n                <div>\n                  not verified{' '}\n                  <Button className=\"btn-sm\" variant=\"warning\" onClick={() => onVerifyEmailResend()} disabled={showVerifyEmailSended}>\n                    Resent email with link for verify\n                  </Button>\n                </div>\n              )}\n            </div>\n            <div className=\"spacer-single\"></div>\n          </div>\n        </div>\n        <div className=\"col-md-12 text-center\">\n          <h2>Change passwod</h2>\n        </div>\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n              <form name=\"contactForm\" id=\"contact_form\" className=\"form-border\" method=\"post\" action=\"blank.php\">\n                <Form>\n                  {invalidOldPassword && <Alert variant={'danger'}>Current password is incorect</Alert>}\n                  {invalidPasswordCopy && <Alert variant={'danger'}>The retyped password is not the same</Alert>}\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Current password</Form.Label>\n                    <Form.Control type=\"password\" placeholder=\"Enter email\" onChange={onCurrentPasswordChange} value={oldPassword} isInvalid={invalidOldPassword} />\n                  </Form.Group>\n\n                  <PasswordComponent password={newPassword} onPasswordChange={onNewPasswordChange} strongPassword={strong} />\n\n                  <Form.Group controlId=\"formBasicPassword\">\n                    <Form.Label>Repeat New Password</Form.Label>\n                    <Form.Control\n                      type=\"password\"\n                      placeholder=\"Retype Password\"\n                      onChange={onNewPasswordCopyChange}\n                      value={newPasswordCopy}\n                      isInvalid={invalidPasswordCopy}\n                    />\n                  </Form.Group>\n                </Form>\n\n                <div id=\"submit\" className=\"pull-left\">\n                  {!loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" onClick={() => onChangePassword()} disabled={!strong.valid}>\n                      Change Password\n                    </Button>\n                  )}\n                  {loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" disabled>\n                      Loading...\n                    </Button>\n                  )}\n\n                  <div className=\"clearfix\"></div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default UserInfo\n","import { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport React, { useState } from 'react'\nimport { Alert, Button, Form } from 'react-bootstrap'\nimport { isEmailValid } from '../../app/utils'\n\nconst FORGOTTEN_PASSWORD_REQUEST_MUTATION = gql`\n  mutation forgottenPassword($email: String!) {\n    forgottenPassword_v1(email: $email) {\n      email\n      status\n    }\n  }\n`\n\nexport const ForgottenPassword: React.FC = () => {\n  const [email, setEmail] = useState('')\n  const [invalidEmail, setInvalidEmail] = useState(false)\n  const [emailSent, setEmailSent] = useState(false)\n\n  const [checkResetEmail, { loading: loadingCheckResetEmail, data: checkResetEmailData, error: checkResetEmailError }] = useMutation(\n    FORGOTTEN_PASSWORD_REQUEST_MUTATION,\n    {\n      errorPolicy: 'none',\n    },\n  )\n\n  const [doForgottenPassword, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_REQUEST_MUTATION, {\n    errorPolicy: 'none',\n  })\n\n  const onRequestSend = async () => {\n    setEmailSent(false)\n    if (email && isEmailValid(email)) {\n      setInvalidEmail(false)\n      try {\n        const { data } = await doForgottenPassword({ variables: { email } })\n        setEmailSent(true)\n      } catch (ex) {\n        console.log('onError', data)\n        setInvalidEmail(true)\n      }\n    } else {\n      setInvalidEmail(true)\n    }\n  }\n\n  const onEmailChange = (event: any) => {\n    setEmail(event.target.value)\n    setInvalidEmail(false)\n  }\n\n  if (emailSent) {\n    return (\n      <>\n        <Alert variant={'success'}>We sent to You instruction to email {email}. Check your mailbox (don't forget check spam as well)</Alert>\n      </>\n    )\n  }\n\n  return (\n    <>\n      <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\n        <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-8 offset-md-2\">\n                <form action=\"blank.php\" className=\"row\" id=\"form_subscribe\" method=\"post\" name=\"myForm\">\n                  <div className=\"col-md-12 text-center\">\n                    <h1>Forgotten Password</h1>\n                    <p>Shortly You will be back</p>\n                  </div>\n                  <div className=\"clearfix\"></div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </div>\n      </section>\n\n      <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\n        <div className=\"container\">\n          <div className=\"row\">\n            <div className=\"col-md-6 offset-md-3\">\n              <form name=\"contactForm\" id=\"contact_form\" className=\"form-border\" method=\"post\" action=\"blank.php\">\n                <Form>\n                  <Form.Group controlId=\"formBasicEmail\">\n                    <Form.Label>Email address</Form.Label>\n                    <Form.Control type=\"email\" placeholder=\"Enter email\" onChange={onEmailChange} value={email} isInvalid={invalidEmail} />\n                    <Form.Text className=\"text-muted\">We'll never share your email with anyone else.</Form.Text>\n                  </Form.Group>\n                </Form>\n\n                <div id=\"submit\" className=\"pull-left\">\n                  {!loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" onClick={() => onRequestSend()}>\n                      Send Recovery Link\n                    </Button>\n                  )}\n                  {loading && (\n                    <Button className=\"btn-round\" variant=\"primary\" disabled>\n                      Loading...\n                    </Button>\n                  )}\n\n                  <div className=\"clearfix\"></div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n      </section>\n    </>\n  )\n}\n\nexport default ForgottenPassword\n","import { useMutation } from '@apollo/client'\nimport gql from 'graphql-tag'\nimport _ from 'lodash'\nimport React, { useEffect, useState } from 'react'\nimport { Alert, Button, Form } from 'react-bootstrap'\nimport { useHistory } from 'react-router-dom'\nimport { useAppDispatch } from '../../app/hooks'\nimport { login, UserToken } from '../../app/reducers/userSlice'\nimport { isPasswordValid, passwordStrong } from '../../app/utils'\nimport PasswordComponent from './PasswordComponent'\n\nconst FORGOTTEN_PASSWORD_CHECK_MUTATION = gql`\n  mutation forgottenPasswordCheck($token: String!) {\n    check: forgottenPasswordCheck_v1(token: $token) {\n      status\n    }\n  }\n`\n\nconst FORGOTTEN_PASSWORD_RESET_MUTATION = gql`\n  mutation forgottenPasswordReset($token: String!, $password: String!) {\n    reset: forgottenPasswordReset_v1(token: $token, password: $password) {\n      refreshToken\n      token\n      user {\n        roles {\n          name\n        }\n        id\n        email\n        verified\n      }\n    }\n  }\n`\n\nexport const ForgotenPasswordReset: React.FC<any> = ({ match }) => {\n  const token = _.get(match, 'params.token')\n  const [password, setPassword] = useState('')\n  const [copy, setCopy] = useState('')\n\n  const history = useHistory()\n  const dispatch = useAppDispatch()\n\n  const [doForgottenPasswordCheck, { loading: loadingForgottenPasswordCheck, data: dataForgottenPasswordCheck, error: errorForgottenPasswordCheck }] = useMutation(\n    FORGOTTEN_PASSWORD_CHECK_MUTATION,\n    {\n      errorPolicy: 'none',\n    },\n  )\n\n  const [doForgottenPasswordReset, { loading, data, error }] = useMutation(FORGOTTEN_PASSWORD_RESET_MUTATION, {\n    errorPolicy: 'none',\n  })\n\n  const [invalidPass, setInvalidPass] = useState(false)\n  const [strong, setStrong] = useState(passwordStrong(''))\n  const [validPass, setValidPass] = useState(false)\n\n  const [invalidCopy, setInvalidCopy] = useState(false)\n\n  useEffect(() => {\n    const doCheck = async () => {\n      try {\n        await doForgottenPasswordCheck({ variables: { token } })\n      } catch (ex) {\n      } finally {\n      }\n    }\n\n    doCheck()\n  }, [token, doForgottenPasswordCheck])\n\n  const onReset = async () => {\n    if (!strong.valid) {\n      return\n    }\n\n    if (password !== copy) {\n      setInvalidCopy(true)\n      return\n    }\n\n    try {\n      const { data } = await doForgottenPasswordReset({ variables: { token, password } })\n      // dispatch({\n      //   type: USER_LOGIN,\n      //   userToken: data.reset,\n      // })\n      dispatch(login(data.reset as UserToken))\n      history.replace('/user/projects')\n    } catch (ex) {\n      console.log('onError', data)\n    }\n  }\n\n  const onPasswordChange = (event: any) => {\n    const pass = event.target.value as string\n\n    setPassword(pass)\n    const valid = isPasswordValid(pass)\n    setInvalidPass(!valid)\n    setStrong(passwordStrong(pass))\n  }\n\n  const onCopyChange = (event: any) => {\n    const c = event.target.value\n    setCopy(c)\n    setInvalidPass(false)\n\n    if (c == password) {\n      setInvalidCopy(false)\n    }\n  }\n\n  if (loadingForgottenPasswordCheck) {\n    return <Alert variant={'success'}>Checking token</Alert>\n  } else if (dataForgottenPasswordCheck && dataForgottenPasswordCheck.check && dataForgottenPasswordCheck.check.status === 'valid') {\n    return (\n      <>\n        <section id=\"subheader\" data-bgimage=\"url(images/background/5.png) bottom\">\n          <div className=\"center-y relative text-center\" data-scroll-speed=\"4\">\n            <div className=\"container\">\n              <div className=\"row\">\n                <div className=\"col-md-8 offset-md-2\">\n                  <form action=\"blank.php\" className=\"row\" id=\"form_subscribe\" method=\"post\" name=\"myForm\">\n                    <div className=\"col-md-12 text-center\">\n                      <h1>User Password Reset</h1>\n                      <p>You will be back soon</p>\n                    </div>\n                    <div className=\"clearfix\"></div>\n                  </form>\n                </div>\n              </div>\n            </div>\n          </div>\n        </section>\n\n        <section className=\"no-top\" data-bgimage=\"url(images/background/3.png) top\">\n          <div className=\"container\">\n            <div className=\"row\">\n              <div className=\"col-md-6 offset-md-3\">\n                <form name=\"contactForm\" id=\"contact_form\" className=\"form-border\" method=\"post\" action=\"blank.php\">\n                  <Form>\n                    {/* {invalidPass && (<Alert variant={\"danger\"}>The password have to contain capital letter,lower letter, a number and must be 6-16 characters long</Alert>)}   */}\n                    {invalidCopy && <Alert variant={'danger'}>The retyped password is not the same</Alert>}\n                    <PasswordComponent password={password} onPasswordChange={onPasswordChange} strongPassword={strong} />\n\n                    <Form.Group controlId=\"formBasicPassword\">\n                      <Form.Label>Re-Password</Form.Label>\n                      <Form.Control type=\"password\" placeholder=\"Retype Password\" onChange={onCopyChange} value={copy} isInvalid={invalidCopy} />\n                    </Form.Group>\n                  </Form>\n\n                  <div id=\"submit\" className=\"pull-left\">\n                    {!loading && (\n                      <Button className=\"btn-round\" variant=\"primary\" onClick={() => onReset()} disabled={!strong.valid}>\n                        Reset password\n                      </Button>\n                    )}\n                    {loading && (\n                      <Button className=\"btn-round\" variant=\"primary\" disabled>\n                        Loading...\n                      </Button>\n                    )}\n\n                    <div className=\"clearfix\"></div>\n                  </div>\n                </form>\n              </div>\n            </div>\n          </div>\n        </section>\n      </>\n    )\n  } else {\n    return (\n      <Alert variant={'danger'}>\n        The <b>{token}</b> is not valid or already used\n      </Alert>\n    )\n  }\n}\n\nexport default ForgotenPasswordReset\n","import React, { useEffect, useState } from 'react'\nimport axios from 'axios'\nimport { Link, useHistory, useLocation } from 'react-router-dom'\nimport _ from 'lodash'\nimport { Alert } from 'react-bootstrap'\nimport { login, UserToken } from '../../app/reducers/userSlice'\nimport { useAppDispatch } from '../../app/hooks'\n\nexport const tokenFromFacebookCode = async (type: string, code: string) => {\n  return axios.get(`${process.env.REACT_APP_HOST}/auth/${type}/callback?code=${code}`)\n}\n\nexport const PassportCallback: React.FC<{ type: string }> = ({ type }) => {\n  const dispatch = useAppDispatch()\n  const location = useLocation()\n  const codeRaw = _.get(location, 'search', '').split('?code=')\n  const code = codeRaw.length > 1 ? codeRaw[1] : ''\n\n  const history = useHistory()\n\n  const [error, setError] = useState<string>()\n\n  const showError = (errorMessage: string) => {\n    setError(errorMessage)\n    setTimeout(() => {\n      history.replace('/login')\n    }, 6000)\n  }\n  useEffect(() => {\n    const request = async () => {\n      try {\n        const data = await tokenFromFacebookCode(type, code)\n        const userToken = data.data as UserToken\n\n        dispatch(login(userToken))\n        history.replace('/user/projects')\n      } catch (ex) {\n        const response = JSON.parse(_.get(ex, 'request.response', '{}'))\n        showError(response.error?.error || response.error?.message || ex.message)\n      }\n    }\n\n    if (code) request()\n    else showError('User denied')\n  }, [location])\n\n  return (\n    <>\n      {error && (\n        <Alert variant={'danger'}>\n          <h4>Login {type} Error</h4>\n          <p>{error}</p>\n          <i>\n            You will be redirect back to <Link to=\"/login\">Login</Link>\n          </i>\n        </Alert>\n      )}\n    </>\n  )\n}\n","import React from \"react\";\nimport { loader } from 'graphql.macro';\nimport { useParams } from \"react-router-dom\";\nimport * as _ from 'lodash'\nimport BaseEdit from \"../../components/EditorEx/Edit\";\n\n\nexport const CREATE_MUTATION = loader('./graphql/create.gql')\nexport const UPDATE_MUTATION = loader('./graphql/update.gql')\nexport const ONE_QUERY = loader('./graphql/one.gql');\nexport const ALL_QUERY = loader('./graphql/all.gql');\n\nexport const FIELDS = [\n\t{name: 'name', label:'Name', required: true},\n\t{name: 'type', label:'Type', required: true},\n\t{name: 'template', label:'Template', required: true},\n\t{name: 'query', label:'Query', required: true}\n]\n\nexport type ExportEditType = {\n    name?: string, \n    fields?: any\n    createMutation?: any,\n    updateMutation?: any,\n    oneQuery?: any\n  }\n\nexport const ExportEdit:(obj:ExportEditType)=>any = ({name, fields, createMutation, updateMutation, oneQuery }) => {\n  const params = useParams() as any;\n  \n  const id = params.id !== 'create' &&  params.id\n\n  const updateCache:(cache: any, data: any)=>void = (cache, {data}) => {\n    const userId = localStorage.getItem('user.id')\n    const mutated = data.mutated\n    \n    if(userId && mutated){\n      const cacheRead = cache.readQuery({\n        query: ALL_QUERY,\n        variables: {\n          filter: createDefaultFilter(userId)\n        },\n      });\n\n      cache.writeQuery({\n        query: ALL_QUERY,\n        variables: {\n          filter: createDefaultFilter(userId)\n        },\n        data: {\n          all: [\n            ...cacheRead.all, mutated\n          ]\n        }\n      });\n    }\n  }\n  \n  return (<div className={`base-edit-Export base-edit`}>\n      <BaseEdit \n        id={id} \n        name={name || 'Exports'}\n        fields={fields || FIELDS}\n        query={{\n            CREATE_MUTATION: createMutation || CREATE_MUTATION,\n            UPDATE_MUTATION: updateMutation || UPDATE_MUTATION,\n            QUERY: oneQuery || ONE_QUERY\n        }}\n        updateCache={updateCache}\n      />\n      </div>\n  );\n};\n\nexport default ExportEdit\n\nfunction createDefaultFilter(userId: string) {\n  throw new Error(\"Function not implemented.\");\n}\n","import _ from 'lodash'\nimport React, { useEffect } from 'react'\n\nexport const HiddenItem = ({name, value, register, setValue, storedData}:any) =>{\n\n    const isRelation = name.endsWith('Id')\n    const storedDataName = isRelation ? name.substr(0, name.length-2) : name\n    \n    useEffect(()=>{\n        if(storedData && storedData[storedDataName]) {\n            let storedId: string\n      \n            if(isRelation) storedId = _.get(storedData, [storedDataName, 'id'])\n            else storedId = storedData[storedDataName]\n      \n            setValue(name, storedId)\n            \n        } else setValue(name, value)\n    }, [storedData, value])\n    \n    \n    return (\n        <React.Fragment>\n            <input type=\"hidden\" {...register(name)} />\n        </React.Fragment>\n    )\n}\n\nexport default HiddenItem","import React from 'react'\nimport { Alert } from 'react-bootstrap'\n\nexport type TPdfDownloadState = { ok?: Boolean; error?: unknown }\n\nexport const PdfDownloadState: (state: TPdfDownloadState) => any = ({ ok, error }) => {\n  if (ok) {\n    return <Alert variant=\"success\">Configuration seems ok</Alert>\n  }\n\n  if (error) {\n    return (\n      <Alert variant=\"warning\">\n        <code>{JSON.stringify(error)}</code>\n      </Alert>\n    )\n  }\n}\n","import JSON5 from 'json5'\nimport React, { useCallback, useMemo, useState } from 'react'\nimport { Alert, Button, Form } from 'react-bootstrap'\nimport { useForm } from 'react-hook-form'\nimport { useSelector } from 'react-redux'\nimport { Link, useParams } from 'react-router-dom'\nimport { selectUser } from '../../app/reducers/userSlice'\nimport { CREATE_MUTATION, ExportEditType, ONE_QUERY, UPDATE_MUTATION } from '../../gen/Export/Edit'\nimport AceControl from '../../components/Editor/AceControl'\nimport BaseEditor from '../../components/Editor/BaseEditor'\nimport Control from '../../components/Editor/Control'\nimport HiddenItem from '../../components/Editor/HiddenItem'\nimport { PdfDownloadState, TPdfDownloadState } from './PdfDownloadState'\nimport './Edit.css'\n\nconst mutationOptaionToken = `mutation{\n  login_v1(email:\"type-user-email\", password:\"type-user-pass\"){\n      token\n  }\n}`\n\nasync function downloadPDF(setStatus: (a: TPdfDownloadState) => void, url: string, filename = 'download.pdf', token = '') {\n  let headers = new Headers()\n  if (token) headers.append('Authorization', `Bearer ${token}`)\n  setStatus({})\n  try {\n    const data = await fetch(url, {\n      method: 'GET',\n      headers: headers,\n    })\n    const blob = await data.blob()\n    if (data.ok) {\n      // It is necessary to create a new blob object with mime-type explicitly set for all browsers except Chrome, but it works for Chrome too.\n      const newBlob = new Blob([blob], { type: 'application/pdf' })\n\n      // MS Edge and IE don't allow using a blob object directly as link href, instead it is necessary to use msSaveOrOpenBlob\n      if (window.navigator && window.navigator.msSaveOrOpenBlob) {\n        window.navigator.msSaveOrOpenBlob(newBlob)\n      } else {\n        // For other browsers: create a link pointing to the ObjectURL containing the blob.\n        const objUrl = window.URL.createObjectURL(newBlob)\n\n        let link = document.createElement('a')\n        link.href = objUrl\n        link.download = filename\n        link.click()\n\n        // For Firefox it is necessary to delay revoking the ObjectURL.\n        setTimeout(() => {\n          window.URL.revokeObjectURL(objUrl)\n        }, 250)\n\n        setStatus({ ok: true })\n      }\n    } else {\n      let b = new Blob([blob], { type: 'application/json' })\n      const fr = new FileReader()\n\n      fr.onload = function (data1) {\n        setStatus({ error: this.result })\n        console.log(JSON.parse(this.result as any))\n      }\n\n      fr.readAsText(b)\n    }\n  } catch (ex) {\n    setStatus({ error: ex })\n    console.log(ex)\n  }\n}\n\nexport const ExportForm = ({ onSubmit, storedData, graphQlError, projectId }: any) => {\n  const user = useSelector(selectUser) || { id: null }\n  const reactForm = useForm()\n  const { register, handleSubmit, formState, setValue, getValues, watch } = reactForm\n\n  const [pdfDownloadState, setPdfDownloadState] = useState<TPdfDownloadState>({})\n  const name = watch('name')\n  const testVariables = watch('testVariables')\n  const testToken = watch('testToken')\n\n  const testLink = useMemo(() => {\n    const jsonValue = testVariables ? JSON5.stringify(JSON5.parse(testVariables)) : ''\n    const escapedValue = encodeURI(jsonValue.substr(1, jsonValue.length - 2))\n    return `${process.env.REACT_APP_HOST}/client/${user.id}/project/${projectId}/pdf/${storedData['id']}/${escapedValue}`\n  }, [testVariables])\n\n  const onTestDownload = useCallback(() => {\n    downloadPDF(setPdfDownloadState, testLink, `test-download-${name}`, testToken)\n  }, [testLink, testToken, name])\n\n  const processSubmit = (data: any) => {\n    onSubmit(data)\n  }\n\n  return (\n    <div>\n      <Form onSubmit={handleSubmit(processSubmit)}>\n        <h1>Export</h1>\n        <h2>Config</h2>\n        <Control name={'name'} label={'name'} required={true} storedData={storedData} {...reactForm} />\n        {/* <Control name={'query'} label={'query'} required={true} storedData={storedData} {...reactForm} /> */}\n        {/* <Control name={'template'} label={'template'} required={true} storedData={storedData} {...reactForm} /> */}\n\n        <AceControl name={'query'} label={'Query'} {...reactForm} storedData={storedData} />\n        <AceControl name={'template'} label={'Template'} {...reactForm} storedData={storedData} />\n        <HiddenItem name={'type'} value={'pdf'} {...reactForm} storedData={storedData} />\n        <HiddenItem name={'projectId'} value={projectId} {...reactForm} storedData={storedData} />\n\n        <hr />\n        <h2>Test environment</h2>\n        <AceControl name={'testVariables'} label={'Test Variables'} {...reactForm} storedData={storedData} defaultHight={100} />\n        {/* <AceControl name={'testTokenQuery'} label={'Optain Token'} {...reactForm} storedData={storedData} defaultHight={100} /> */}\n\n        <div className=\".my-documentation\">\n          <h3>\n            Optaining user token{' '}\n            <small>\n              (\n              <Link to={`/user/projects/${projectId}/graphiql`} target={'_blank'}>\n                Admin Playground\n              </Link>\n              )\n            </small>\n          </h3>\n          <pre className=\"export-pre\">\n            <code>{mutationOptaionToken}</code>\n          </pre>\n          <Control name={'testToken'} label={'Test Token (not for save)'} storedData={storedData} {...reactForm} />\n\n          {pdfDownloadState.ok || (pdfDownloadState.error && <PdfDownloadState {...pdfDownloadState} />)}\n\n          <div className=\"input-group\">\n            <input type=\"text\" className=\"form-control\" value={testLink} placeholder=\"Project connect link\" id=\"copy-input\" />\n            <div className=\"input-group-append\">\n              <Button className=\"btn btn-default\" onClick={onTestDownload} title=\"Copy to clipboard\">\n                Test Download\n              </Button>\n              <Button\n                className=\"btn btn-default\"\n                onClick={() => {\n                  navigator.clipboard.writeText(testLink)\n                }}\n                title=\"Copy to clipboard\"\n              >\n                Copy\n              </Button>\n            </div>\n          </div>\n        </div>\n        <hr />\n\n        <Button type=\"submit\">Save</Button>\n      </Form>\n\n      <form></form>\n    </div>\n  )\n}\n\nexport const ExportEdit: (obj: ExportEditType) => any = ({ name, createMutation, updateMutation, oneQuery }) => {\n  const params = useParams() as any\n\n  const id = params.id !== 'create' && params.id\n\n  return (\n    <div className={`base-edit-Invoice base-edit`}>\n      <BaseEditor\n        externId={id}\n        name={name || 'Invoices'}\n        query={{\n          CREATE_MUTATION: createMutation || CREATE_MUTATION,\n          UPDATE_MUTATION: updateMutation || UPDATE_MUTATION,\n          QUERY: oneQuery || ONE_QUERY,\n        }}\n      >\n        {(storedData: any, onSubmit: any, errors: any) => <ExportForm storedData={storedData} onSubmit={onSubmit} graphQlError={errors} projectId={params.projectId} />}\n      </BaseEditor>\n    </div>\n  )\n}\n\nexport default ExportEdit\n","import { configureStore, ThunkAction, Action } from '@reduxjs/toolkit'\nimport userReducer from './reducers/userSlice'\n\nexport const store = configureStore({\n  reducer: {\n    user: userReducer,\n  },\n})\n\nexport type AppDispatch = typeof store.dispatch\nexport type RootState = ReturnType<typeof store.getState>\nexport type AppThunk<ReturnType = void> = ThunkAction<ReturnType, RootState, unknown, Action<string>>\n","import React, { useEffect, useMemo, useState } from 'react'\nimport FilteredList from '../../components/List1/FilteredList'\nimport gql from 'graphql-tag'\nimport { useHistory, useParams } from 'react-router'\nimport { useSelector } from 'react-redux'\nimport { selectUser } from '../../app/reducers/userSlice'\nimport { Link } from 'react-router-dom'\nimport { Button, Tab, Table, Tabs } from 'react-bootstrap'\nimport { SelectCallback } from 'react-bootstrap/esm/helpers'\nimport axios from 'axios'\nimport { map } from 'lodash'\n\nconst USER_LIST_QUERY = gql`\n  query allExport($filter: ExportFilter) {\n    allExport(filter: $filter) {\n      id\n      type\n      name\n    }\n  }\n`\n\nconst ADMIN_LIST_QUERY = gql`\n  query allExport($filter: ExportFilter) {\n    allExport(filter: $filter) {\n      id\n      type\n      name\n    }\n  }\n`\n\nconst DELETE_MUTATION = gql`\n  mutation deleteExport($id: ID!) {\n    deleteExport(id: $id) {\n      id\n    }\n  }\n`\n\nasync function clientGQL(clientUrl: string, query: string, variables: any = {}, headers: any = {}) {\n  headers['Content-Type'] = 'application/json'\n\n  return await axios.post(\n    clientUrl,\n    {\n      query,\n      variables,\n    },\n    {\n      headers,\n    },\n  )\n}\n\nexport const ProjectFilesList: React.FC<{ userId?: string; adminMode?: boolean }> = ({ userId, adminMode = false }) => {\n  const [fileList, setFileList] = useState([])\n  const user = useSelector(selectUser) || { id: null, token: '' }\n  const history = useHistory()\n  const params = useParams() as any\n  const URL = useMemo(() => `${process.env.REACT_APP_HOST}/client/${user.id}/project/${params?.projectId}`, [user.id, params?.projectId])\n\n  const loadFilesFromClient = async () => {\n    const localFiles = await clientGQL(\n      `${URL}/graphql`,\n      `\n    query{ allFile{id, name, type, size, publicKey, user{id}}\n  }`,\n      {},\n      {\n        Authorization: `Bearer ${localStorage.getItem('user.token')}`,\n        xuser: user.id,\n        xproject: params?.projectId,\n      } as any,\n    )\n\n    setFileList(localFiles?.data?.data?.allFile)\n  }\n\n  const onChange = (event: React.FormEvent<HTMLInputElement>) => {\n    const files = event.currentTarget?.files || []\n    const file = files[0]\n\n    const data = new FormData()\n    data.append('file', file)\n    new Promise(async (resolve, reject) => {\n      const event = await axios.post(`${URL}/upload`, data, {\n        // authorization: Bearer\n        headers: {\n          Authorization: `Bearer ${user.token}`,\n          xuser: user.id,\n          xproject: params?.projectId,\n        },\n      })\n      console.log(event)\n      loadFilesFromClient()\n      resolve(event)\n      // receive two    parameter endpoint url ,form data\n    })\n\n    // history.push(`/user/projects/${params.projectId}/exports/create`)\n  }\n\n  if (!user) return <></>\n\n  useEffect(() => {\n    if (URL && user.token) loadFilesFromClient()\n  }, [URL, user.token])\n\n  const onTabSelect: SelectCallback = (tabKey) => {\n    if (tabKey !== 'exports') {\n      history.replace(`/user/projects/${params.projectId}`)\n      // history\n    }\n    if (tabKey === 'exports') {\n      history.replace(`/user/projects/${params.projectId}/exports`)\n      // history\n    }\n  }\n\n  return (\n    <div className=\"base-edit\">\n      <Tabs className=\"base-edit-tabs\" activeKey={'files'} onSelect={onTabSelect}>\n        <Tab eventKey={'main'} title={'Main'}></Tab>\n        <Tab eventKey={'email'} title={'Emails'}></Tab>\n        <Tab eventKey={'login'} title={'Logins'}></Tab>\n        <Tab eventKey={'exports'} title={'Exports'}></Tab>\n        <Tab eventKey={'files'} title={'Files'}>\n          <div className=\"custom-file\">\n            <input type=\"file\" className=\"custom-file-input\" id=\"customFile\" onChange={onChange} />\n            <label className=\"custom-file-label\">Choose file</label>\n            <ListFiles fileList={fileList} />\n          </div>\n        </Tab>\n      </Tabs>\n    </div>\n  )\n}\n\nfunction ListFiles({ fileList }: any) {\n  return (\n    <Table responsive>\n      <thead>\n        <tr>\n          <th>Id</th>\n          <th>Name</th>\n          <th>Type</th>\n          <th>Size</th>\n          <th>Public Key</th>\n          <th></th>\n        </tr>\n      </thead>\n      <tbody>\n        {fileList.map((file: any) => (\n          <tr>\n            <td className=\"id\">{file.id}</td>\n            <td>{file.name}</td>\n            <td>{file.type}</td>\n            <td>{file.size}</td>\n            <td>\n              {' '}\n              <form>\n                <div className=\"input-group\">\n                  <input type=\"text\" className=\"form-control\" value={file.publicKey} placeholder=\"Project connect link\" id=\"copy-input\" />\n                  <div className=\"input-group-append\">\n                    <Button\n                      className=\"btn btn-default\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(file.publicKey)\n                      }}\n                      title=\"Copy to clipboard\"\n                    >\n                      Copy\n                    </Button>\n                    <Button\n                      className=\"btn btn-default\"\n                      onClick={() => {\n                        navigator.clipboard.writeText(file.publicKey)\n                      }}\n                      title=\"Download\"\n                    >\n                      Download\n                    </Button>\n                  </div>\n                </div>\n              </form>\n            </td>\n          </tr>\n        ))}\n      </tbody>\n    </Table>\n  )\n}\n\nexport default ProjectFilesList\n","import React from 'react'\nimport Typed from 'react-typed'\nimport Button from 'react-bootstrap/Button'\nimport { Link } from 'react-router-dom'\n\nimport ReactMarkdown from 'react-markdown'\nimport gfm from 'remark-gfm'\n\nimport markdown from './markdowns/ObtainToken'\nimport './Documentation.scss'\n\nexport const DocumentationOptainToken = () => {\n  return (\n    <div className=\"container\">\n      <div className=\"my-documentation\">\n        <ReactMarkdown plugins={[gfm]} children={markdown} allowDangerousHtml={true} />\n      </div>\n    </div>\n  )\n}\n\nexport default DocumentationOptainToken\n","export default `\n# Optain Token\n\n1. [Admin Playground](#entity)\n1. [Login existing user](#entity)\n1. [Register new user](#model)\n1. [Add (admin) role to user](#fields)\n1. [Refresh token](#fields)\n1. [How to use token](#fields)\n\n# Admin Playground\n\nIn project list, is a button Admin Playground from where you can do all operations with admin role. For example list of all users\n\n### Project with Admin Playground button\n![alt admin playground button](/documentation/admin-playground-button.png)\n\n### Admin Playground\n![alt admin playground](/documentation/admin-playground.png)\n\n### All user query\n\n\\`\\`\\`\n{allUser{id, email, roles{id, name}}}\n\\`\\`\\`\n\n\\`\\`\\`\n{\n  \"data\": {\n    \"allUser\": [\n      {\n        \"id\": \"60d976d791e6c6769608b52f\",\n        \"email\": my@account.com\",\n        \"roles\": [\n          {\n            \"id\": \"60d976d791e6c6769608b52d\",\n            \"name\": \"admin\"\n          }\n        ]\n      },\n    ]\n  }\n}\n\\`\\`\\`\n\n# Login existing user\n\nAfter create new project, your email and password is recreated also into your new project.\nSo with your creadentials you can login to your project and you can optain a token with admin role.\nUnfortunately that is not possible if you are login to graphql.monster with 3party github, facebook,\n\n### admin playground\n\n\\`\\`\\`\nmutation {login_v1(email:\"my@account.com\", password:\"*****\"){token, refreshToken, user{id, roles{id, name}}}}\n\\`\\`\\`\n\n### curl\n\n\\`\\`\\`\ncurl -XPOST -H \"Content-type: application/json\" -d '{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  login_v1(email: \\\"new@user.com\\\", password: \\\"wery-heavy-password-341!\\\") {\\n    token\\n    refreshToken\\n    user {\\n      id\\n      roles {\\n        id\\n        name\\n      }\\n    }\\n  }\\n}\\n\"}' 'https://graphql.monster/client/<replace-with-your-userid>/project/<replace-with-your-projectid>/graphql'\n\\`\\`\\`\n\n### example response\n\n\\`\\`\\`\n// example of response\n  \"data\": {\n    \"login_v1\": {\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsInJvbGVzIjpbIjYwZDk3NmQ3OTFlNmM2NzY5NjA4YjUyZCJdLCJpYXQiOjE2MjU1MTM0NjEsImV4cCI6MTYyNTUxNzA2MX0.K0p4WY2lcqf8lrUPJda_JAQLmU1IFxZpbjY8OpqAHcA\",\n      \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsImlhdCI6MTYyNTUxMzQ2MSwiZXhwIjoxNjU3MDQ5NDYxfQ.X6dN0S_-dROBUTguLhx-xMjIQimdrZXfYjQQF11EohI\",\n      \"user\": {\n        \"id\": \"60d976d791e6c6769608b52f\",\n        \"roles\": [\n          {\n            \"id\": \"60d976d791e6c6769608b52d\",\n            \"name\": \"admin\"\n          }\n        ]\n      }\n    }\n  }\n}\n\\`\\`\\`\n\n# Register new user\n\n### admin playground\n\n\\`\\`\\`\nmutation {register_v1(email:\"new@user.com\", password:\"*****\"){token, refreshToken,user{id,email,roles{id,name}}}}\n\\`\\`\\`\n\n### curl\n\n\\`\\`\\`\ncurl -XPOST -H \"Content-type: application/json\" -d '{\"operationName\":null,\"variables\":{},\"query\":\"mutation {\\n  register_v1(email: \\\"new@user.com\\\", password: \\\"wery-heavy-password-341!\\\") {\\n    token\\n    refreshToken\\n    user {\\n      id\\n      roles {\\n        id\\n        name\\n      }\\n    }\\n  }\\n}\\n\"}' 'https://graphql.monster/client/<replace-with-your-userid>/project/<replace-with-your-projectid>/graphql'\n\\`\\`\\`\n\n### example response\n\n\\`\\`\\`\n{\n  \"data\": {\n    \"register_v1\": {\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsInJvbGVzIjpbXSwiaWF0IjoxNjI1NTEzMTkzLCJleHAiOjE2MjU1MTY3OTN9.2mLjKOyvUiFc-TyNFVeeV2ilcFTjaCb2KxM5x7el_SY\",\n      \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsImlhdCI6MTYyNTUxMzE5MywiZXhwIjoxNjU3MDQ5MTkzfQ.IQnYUq7-Ww1SOlmJk6tkvy_n6ex6-2ZHs6sFZNi538g\",\n      \"user\": {\n        \"id\": \"60e35ce99fb40122db659dde\",\n        \"email\": \"new@user.com\",\n        \"roles\": []\n      }\n    }\n  }\n}\n\\`\\`\\`\n\nnow you can try even login with this new user, the result will be very similar\n\n\\`\\`\\`\nmutation {login_v1(email:\"new@user.com\", password:\"*****\"){token, refreshToken,user{id,email,roles{id,name}}}}\n\\`\\`\\`\n\n# Add (admin) role to user\n\nyou can add Admin role to any user\n\n\\`\\`\\`\nmutation{addRoleToUser(userId:\"60e35ce99fb40122db659dde\", userRoleId:\"60d976d791e6c6769608b52d\"){\n  user{id, email, roles{id, name}}\n  userRole{name}\n}}\n\\`\\`\\`\n\n# Remove (admin) role from user\n\nthere is a limitation, you can't remove admin from yourself.\n\n\\`\\`\\`\nmutation{removeRoleFromUser(userId:\"60e35ce99fb40122db659dde\", userRoleId:\"60d976d791e6c6769608b52d\"){\n  user{id, email, roles{id, name}}\n  userRole{name}\n}}\n\\`\\`\\`\n\n# How to use token\n\ntoken should be part of \\`Authorization\\` header together with \\`Bearer\\` keyword\n\n\\`\\`\\`\ncurl -XPOST -H 'Authorization: Bearer eyJhbGciOiJIUzI1iNIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwMjY1YTJjYjY0OTllNmJlNjliMTNiNiIsInJvbGVzIjpbXSwiaWF0IjoxNjI1NTEyNDQyLCJleHAiOjE2MjU1MTYwNDJ9.UlLKJKyZw-WykECixHqV_ZtURgLVDBwwFB62-HmbeKE' -H \"Content-type: application/json\" -d '{\"operationName\":null,\"variables\":{},\"query\":\"{\\n  allUser {\\n    id\\n    email\\n    roles {\\n      id\\n      name\\n    }\\n  }\\n  allUserRole {\\n    id\\n    name\\n  }\\n}\\n\"}' 'https://graphql.monster/client/<your-userid>/project/<your-projectid>/graphql'\n\\`\\`\\`\n\n# Refresh token\n\nToken is limited for one hour, but you can optain new token with \\`refreshToken\\` key together with new \\`refreshToken\\`\n\n### admin playground\n\n\\`\\`\\`\nmutation{\n    refreshToken_v1(\n        token:\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsInJvbGVzIjpbIjYwZDk3NmQ3OTFlNmM2NzY5NjA4YjUyZCJdLCJpYXQiOjE2MjU1MTUwNzMsImV4cCI6MTYyNTUxODY3M30.uUkDwFknQd0GzLDW0V12ZBGhAXozmNZlGm06EQGm-SM\",\n        refreshToken:\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsImlhdCI6MTYyNTUxNTA3MywiZXhwIjoxNjU3MDUxMDczfQ._6_5gdQ4sxDXhsabQuHSbqISMHbaI629bSYpX5w_1mY\",\n        userId:\"60e35ce99fb40122db659dde\"){\n            token,\n            refreshToken\n            }\n        }\n\\`\\`\\`\n\n### curl\n\n\\`\\`\\`\ncurl -XPOST -H 'Authorization: Bearer eyJhbGciOiJIUzI1iNIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwMjY1YTJjYjY0OTllNmJlNjliMTNiNiIsInJvbGVzIjpbXSwiaWF0IjoxNjI1NTEyNDQyLCJleHAiOjE2MjU1MTYwNDJ9.UlLKJKyZw-WykECixHqV_ZtURgLVDBwwFB62-HmbeKE' -H \"Content-type: application/json\" -d 'mutation{\n    refreshToken_v1(\n        token:\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsInJvbGVzIjpbIjYwZDk3NmQ3OTFlNmM2NzY5NjA4YjUyZCJdLCJpYXQiOjE2MjU1MTUwNzMsImV4cCI6MTYyNTUxODY3M30.uUkDwFknQd0GzLDW0V12ZBGhAXozmNZlGm06EQGm-SM\",\n        refreshToken:\"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsImlhdCI6MTYyNTUxNTA3MywiZXhwIjoxNjU3MDUxMDczfQ._6_5gdQ4sxDXhsabQuHSbqISMHbaI629bSYpX5w_1mY\",\n        userId:\"60e35ce99fb40122db659dde\"){\n            token,\n            refreshToken\n            }\n        }' 'https://graphql.monster/client/<your-userid>/project/<your-projectid>/graphql'\n\\`\\`\\`\n\n### example result\n\n\\`\\`\\`\n{\n  \"data\": {\n    \"refreshToken_v1\": {\n      \"token\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsInJvbGVzIjpbXSwiaWF0IjoxNjI1NTE1OTkzLCJleHAiOjE2MjU1MTk1OTN9.E3K1tiUPgtt5irHCV-HrBJbwzWQdyKkwd_uzCT2jaXs\",\n      \"refreshToken\": \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6IjYwZTM1Y2U5OWZiNDAxMjJkYjY1OWRkZSIsImlhdCI6MTYyNTUxNTk5MywiZXhwIjoxNjU3MDUxOTkzfQ.w1wMzkoVfgyY_gPWL0LfTk1mFbX0wguK2etT8_D3GfI\"\n    }\n  }\n}\n\\`\\`\\`\n\n`\n","import React, { useEffect } from 'react'\nimport { BrowserRouter as Router, Switch, Route, Link } from 'react-router-dom'\nimport { ApolloProvider } from '@apollo/client'\n\nimport { ProjectEdit } from './pages/Projects/Edit'\nimport ProjectList, { ProjectAdminList } from './pages/Projects/List'\nimport ExportList from './pages/Exports1/List'\nimport UserList from './pages/Users1/List1'\nimport { Header } from './components/Header1/Header1'\n\nimport apolloClient from './app/apolloClient'\nimport UserRoleList from './pages/UserRoles/List'\nimport UserRoleEdit from './pages/UserRoles/Edit'\nimport GQLPlayground from './pages/Projects/GQLPlayground'\nimport Home from './pages/home/home'\nimport { Register } from './pages/login/Register'\nimport Login from './pages/login/Login'\nimport { PricingPage } from './pages/pricing/pricing'\nimport SubscribePage from './pages/pricing/subsribe'\nimport DocumentationSchemaDescription from './pages/Documentation1/SchemaDescription'\nimport SubscibesListPage from './pages/pricing/subsribe-list'\nimport VerifyUser from './pages/login/VerifyUser'\nimport UserInfo from './pages/login/UserInfo'\nimport ForgottenPassword from './pages/login/ForgottenPassword'\nimport ForgottenPasswordReset from './pages/login/ForgottenPasswordReset'\nimport { PassportCallback } from './pages/login/PassportCallback'\nimport ExportEdit from './pages/Exports1/Edit'\nimport { Provider } from 'react-redux'\nimport { store } from './app/store'\n\nimport './App.css'\nimport ProjectFilesList from './pages/Files/List'\nimport DocumentationOptainToken from './pages/Documentation1/ObtainToken'\n\n// This site has 3 pages, all of which are rendered\n// dynamically in the browser (not server rendered).\n//\n// Although the page does not ever refresh, notice how\n// React Router keeps the URL up to date as you navigate\n// through the site. This preserves the browser history,\n// making sure things like the back button and bookmarks\n// work properly.\n\nexport default function App() {\n  return (\n    <Provider store={store}>\n      <ApolloProvider client={apolloClient}>\n        <Router>\n          <div>\n            <Header />\n            {/*\n              A <Switch> looks through all its children <Route>\n              elements and renders the first one whose path\n              matches the current URL. Use a <Switch> any time\n              you have multiple routes, but you want only one\n              of them to render at a time\n            */}\n            <Switch>\n              <Route exact path=\"/\">\n                <Home />\n              </Route>\n              <Route exact path=\"/login\">\n                <Login />\n              </Route>\n              <Route path=\"/login/facebook\">\n                <PassportCallback type={'facebook'} />\n              </Route>\n              <Route path=\"/login/github\">\n                <PassportCallback type={'github'} />\n              </Route>\n              <Route path=\"/login/google\">\n                <PassportCallback type={'google'} />\n              </Route>\n              <Route path=\"/register\">\n                <Register />\n              </Route>\n\n              <Route path=\"/forgotten-password/:token\" component={ForgottenPasswordReset} />\n              <Route exact path=\"/forgotten-password\">\n                <ForgottenPassword />\n              </Route>\n\n              <Route path=\"/verify-user/:verifyToken\" component={VerifyUser} />\n              <Route path=\"/pricing\">\n                <PricingPage />\n              </Route>\n              <Route path=\"/subscribe\">\n                <SubscribePage />\n              </Route>\n              <Route path=\"/documentation/schema-description\">\n                <DocumentationSchemaDescription />\n              </Route>\n              <Route path=\"/documentation/optain-token\">\n                <DocumentationOptainToken />\n              </Route>\n              <Route path=\"/user/projects/create\" component={ProjectEdit} />\n              <Route path=\"/user/projects/:projectId/graphiql\" component={GQLPlayground} />\n              <Route path=\"/user/projects/:projectId/exports/:id\" component={ExportEdit} />\n              <Route path=\"/user/projects/:projectId/exports\" component={ExportList} />\n              <Route path=\"/user/projects/:projectId/files\" component={ProjectFilesList} />\n              <Route path=\"/user/projects/:projectId\" component={ProjectEdit} />\n              <Route path=\"/user/projects\">\n                <ProjectList />\n              </Route>\n\n              <Route path=\"/user/info\">\n                <UserInfo />\n              </Route>\n              <Route path=\"/admin/projects\">\n                <ProjectAdminList />\n              </Route>\n              <Route path=\"/admin/users\">\n                <UserList adminMode={true} />\n              </Route>\n              <Route path=\"/admin/roles\">\n                <UserRoleList adminMode={true} />\n              </Route>\n              <Route path=\"/admin/subsribes\">\n                <SubscibesListPage adminMode={true} />\n              </Route>\n              <Route path=\"/user/roles/create\" component={UserRoleEdit} />\n              <Route path=\"/user/roles/:id\" component={UserRoleEdit} />\n            </Switch>\n          </div>\n        </Router>\n      </ApolloProvider>\n    </Provider>\n  )\n}\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      process.env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' }\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.scss';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}